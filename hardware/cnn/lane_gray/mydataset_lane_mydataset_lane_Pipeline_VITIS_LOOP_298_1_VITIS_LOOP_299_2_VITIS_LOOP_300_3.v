// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_298_1_VITIS_LOOP_299_2_VITIS_LOOP_300_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out1_V_address0,
        out1_V_ce0,
        out1_V_we0,
        out1_V_d0,
        out1_V_address1,
        out1_V_ce1,
        out1_V_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] out1_V_address0;
output   out1_V_ce0;
output   out1_V_we0;
output  [15:0] out1_V_d0;
output  [12:0] out1_V_address1;
output   out1_V_ce1;
input  [15:0] out1_V_q1;

reg ap_idle;
reg out1_V_ce0;
reg out1_V_we0;
reg out1_V_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln298_fu_132_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln298_reg_419;
reg   [0:0] icmp_ln298_reg_419_pp0_iter1_reg;
reg   [0:0] icmp_ln298_reg_419_pp0_iter2_reg;
wire   [0:0] icmp_ln299_fu_150_p2;
reg   [0:0] icmp_ln299_reg_423;
reg   [0:0] icmp_ln299_reg_423_pp0_iter1_reg;
reg   [0:0] icmp_ln299_reg_423_pp0_iter2_reg;
reg   [4:0] h_reg_436;
wire   [0:0] and_ln299_fu_230_p2;
reg   [0:0] and_ln299_reg_442;
wire   [4:0] add_ln299_fu_236_p2;
reg   [4:0] add_ln299_reg_447;
(* use_dsp48 = "no" *) wire   [12:0] add_ln301_fu_357_p2;
reg   [12:0] add_ln301_reg_458;
reg   [12:0] out1_V_addr_reg_463;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [63:0] zext_ln1548_fu_362_p1;
wire    ap_block_pp0_stage0;
reg   [4:0] w_1_fu_66;
wire   [4:0] add_ln300_fu_267_p2;
wire    ap_loop_init;
reg   [4:0] h_1_fu_70;
wire   [4:0] select_ln299_5_fu_255_p3;
reg   [9:0] indvar_flatten_fu_74;
wire   [9:0] select_ln299_6_fu_183_p3;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load_1;
reg   [9:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [3:0] c_fu_78;
wire   [3:0] select_ln299_1_fu_162_p3;
reg   [3:0] ap_sig_allocacmp_c_load;
reg   [12:0] indvar_flatten27_fu_82;
wire   [12:0] add_ln298_1_fu_138_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten27_load;
wire   [0:0] tmp_fu_366_p3;
wire   [3:0] add_ln298_fu_156_p2;
wire   [9:0] add_ln299_2_fu_177_p2;
wire   [0:0] icmp_ln300_fu_224_p2;
wire   [0:0] xor_ln299_fu_219_p2;
wire   [4:0] select_ln299_fu_212_p3;
wire   [0:0] or_ln299_fu_242_p2;
wire   [4:0] select_ln299_3_fu_247_p3;
wire   [9:0] p_shl_fu_283_p3;
wire   [5:0] p_shl2_fu_294_p3;
wire   [10:0] p_shl_cast_fu_290_p1;
wire   [10:0] p_shl2_cast_fu_301_p1;
wire   [10:0] empty_fu_305_p2;
wire   [9:0] p_shl_mid1_fu_318_p3;
wire   [5:0] p_shl2_mid1_fu_329_p3;
wire   [10:0] p_shl_cast_mid1_fu_325_p1;
wire   [10:0] p_shl2_cast_mid1_fu_336_p1;
wire   [10:0] p_mid1_fu_340_p2;
wire   [10:0] select_ln299_2_fu_311_p3;
wire   [10:0] select_ln299_4_fu_346_p3;
wire   [12:0] grp_fu_374_p3;
wire  signed [12:0] select_ln299_4_cast_fu_353_p1;
wire   [3:0] grp_fu_374_p0;
wire   [9:0] grp_fu_374_p1;
wire   [4:0] grp_fu_374_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] grp_fu_374_p00;
wire   [12:0] grp_fu_374_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mydataset_lane_mac_muladd_4ns_10ns_5ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 5 ),
    .dout_WIDTH( 13 ))
mac_muladd_4ns_10ns_5ns_13_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_374_p0),
    .din1(grp_fu_374_p1),
    .din2(grp_fu_374_p2),
    .ce(1'b1),
    .dout(grp_fu_374_p3)
);

mydataset_lane_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln298_fu_132_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            c_fu_78 <= select_ln299_1_fu_162_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            c_fu_78 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            h_1_fu_70 <= 5'd0;
        end else if (((icmp_ln298_reg_419_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            h_1_fu_70 <= select_ln299_5_fu_255_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln298_fu_132_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten27_fu_82 <= add_ln298_1_fu_138_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten27_fu_82 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln298_fu_132_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_74 <= select_ln299_6_fu_183_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_74 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            w_1_fu_66 <= 5'd0;
        end else if (((icmp_ln298_reg_419_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            w_1_fu_66 <= add_ln300_fu_267_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln298_reg_419_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln299_reg_447 <= add_ln299_fu_236_p2;
        and_ln299_reg_442 <= and_ln299_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln298_reg_419_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln301_reg_458 <= add_ln301_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln298_reg_419 <= icmp_ln298_fu_132_p2;
        icmp_ln298_reg_419_pp0_iter1_reg <= icmp_ln298_reg_419;
        icmp_ln299_reg_423_pp0_iter1_reg <= icmp_ln299_reg_423;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        h_reg_436 <= h_1_fu_70;
        icmp_ln298_reg_419_pp0_iter2_reg <= icmp_ln298_reg_419_pp0_iter1_reg;
        icmp_ln299_reg_423_pp0_iter2_reg <= icmp_ln299_reg_423_pp0_iter1_reg;
        out1_V_addr_reg_463 <= zext_ln1548_fu_362_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln298_fu_132_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln299_reg_423 <= icmp_ln299_fu_150_p2;
    end
end

always @ (*) begin
    if (((icmp_ln298_fu_132_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln298_reg_419_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_c_load = 4'd0;
    end else begin
        ap_sig_allocacmp_c_load = c_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten27_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten27_load = indvar_flatten27_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load_1 = 10'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load_1 = indvar_flatten_fu_74;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out1_V_ce0 = 1'b1;
    end else begin
        out1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out1_V_ce1 = 1'b1;
    end else begin
        out1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (tmp_fu_366_p3 == 1'd1))) begin
        out1_V_we0 = 1'b1;
    end else begin
        out1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln298_1_fu_138_p2 = (ap_sig_allocacmp_indvar_flatten27_load + 13'd1);

assign add_ln298_fu_156_p2 = (ap_sig_allocacmp_c_load + 4'd1);

assign add_ln299_2_fu_177_p2 = (ap_sig_allocacmp_indvar_flatten_load + 10'd1);

assign add_ln299_fu_236_p2 = (select_ln299_fu_212_p3 + 5'd1);

assign add_ln300_fu_267_p2 = (select_ln299_3_fu_247_p3 + 5'd1);

assign add_ln301_fu_357_p2 = ($signed(grp_fu_374_p3) + $signed(select_ln299_4_cast_fu_353_p1));

assign and_ln299_fu_230_p2 = (xor_ln299_fu_219_p2 & icmp_ln300_fu_224_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_fu_305_p2 = (p_shl_cast_fu_290_p1 - p_shl2_cast_fu_301_p1);

assign grp_fu_374_p0 = grp_fu_374_p00;

assign grp_fu_374_p00 = select_ln299_1_fu_162_p3;

assign grp_fu_374_p1 = 13'd900;

assign grp_fu_374_p2 = grp_fu_374_p20;

assign grp_fu_374_p20 = select_ln299_3_fu_247_p3;

assign icmp_ln298_fu_132_p2 = ((ap_sig_allocacmp_indvar_flatten27_load == 13'd7200) ? 1'b1 : 1'b0);

assign icmp_ln299_fu_150_p2 = ((ap_sig_allocacmp_indvar_flatten_load_1 == 10'd900) ? 1'b1 : 1'b0);

assign icmp_ln300_fu_224_p2 = ((w_1_fu_66 == 5'd30) ? 1'b1 : 1'b0);

assign or_ln299_fu_242_p2 = (icmp_ln299_reg_423_pp0_iter1_reg | and_ln299_fu_230_p2);

assign out1_V_address0 = out1_V_addr_reg_463;

assign out1_V_address1 = zext_ln1548_fu_362_p1;

assign out1_V_d0 = 16'd0;

assign p_mid1_fu_340_p2 = (p_shl_cast_mid1_fu_325_p1 - p_shl2_cast_mid1_fu_336_p1);

assign p_shl2_cast_fu_301_p1 = p_shl2_fu_294_p3;

assign p_shl2_cast_mid1_fu_336_p1 = p_shl2_mid1_fu_329_p3;

assign p_shl2_fu_294_p3 = {{h_reg_436}, {1'd0}};

assign p_shl2_mid1_fu_329_p3 = {{add_ln299_reg_447}, {1'd0}};

assign p_shl_cast_fu_290_p1 = p_shl_fu_283_p3;

assign p_shl_cast_mid1_fu_325_p1 = p_shl_mid1_fu_318_p3;

assign p_shl_fu_283_p3 = {{h_reg_436}, {5'd0}};

assign p_shl_mid1_fu_318_p3 = {{add_ln299_reg_447}, {5'd0}};

assign select_ln299_1_fu_162_p3 = ((icmp_ln299_fu_150_p2[0:0] == 1'b1) ? add_ln298_fu_156_p2 : ap_sig_allocacmp_c_load);

assign select_ln299_2_fu_311_p3 = ((icmp_ln299_reg_423_pp0_iter2_reg[0:0] == 1'b1) ? 11'd0 : empty_fu_305_p2);

assign select_ln299_3_fu_247_p3 = ((or_ln299_fu_242_p2[0:0] == 1'b1) ? 5'd0 : w_1_fu_66);

assign select_ln299_4_cast_fu_353_p1 = $signed(select_ln299_4_fu_346_p3);

assign select_ln299_4_fu_346_p3 = ((and_ln299_reg_442[0:0] == 1'b1) ? p_mid1_fu_340_p2 : select_ln299_2_fu_311_p3);

assign select_ln299_5_fu_255_p3 = ((and_ln299_fu_230_p2[0:0] == 1'b1) ? add_ln299_fu_236_p2 : select_ln299_fu_212_p3);

assign select_ln299_6_fu_183_p3 = ((icmp_ln299_fu_150_p2[0:0] == 1'b1) ? 10'd1 : add_ln299_2_fu_177_p2);

assign select_ln299_fu_212_p3 = ((icmp_ln299_reg_423_pp0_iter1_reg[0:0] == 1'b1) ? 5'd0 : h_1_fu_70);

assign tmp_fu_366_p3 = out1_V_q1[32'd15];

assign xor_ln299_fu_219_p2 = (icmp_ln299_reg_423_pp0_iter1_reg ^ 1'd1);

assign zext_ln1548_fu_362_p1 = add_ln301_reg_458;

endmodule //mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_298_1_VITIS_LOOP_299_2_VITIS_LOOP_300_3
