// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_389_1_VITIS_LOOP_391_3_VITIS_LOOP_392_4_VITIS_LOOP_393_52 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out3_V_address0,
        out3_V_ce0,
        out3_V_q0,
        out4_V_address0,
        out4_V_ce0,
        out4_V_we0,
        out4_V_d0,
        out4_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] out3_V_address0;
output   out3_V_ce0;
input  [15:0] out3_V_q0;
output  [9:0] out4_V_address0;
output   out4_V_ce0;
output   out4_V_we0;
output  [15:0] out4_V_d0;
input  [15:0] out4_V_q0;

reg ap_idle;
reg[11:0] out3_V_address0;
reg out3_V_ce0;
reg[9:0] out4_V_address0;
reg out4_V_ce0;
reg out4_V_we0;
reg[15:0] out4_V_d0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln389_reg_1210;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [1:0] m_1_reg_1188;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [3:0] h_2_reg_1193;
reg   [4:0] tmp_4_reg_1199;
wire   [11:0] empty_39_fu_289_p2;
reg   [11:0] empty_39_reg_1205;
wire   [0:0] icmp_ln389_fu_301_p2;
reg   [0:0] icmp_ln389_reg_1210_pp0_iter1_reg;
reg   [1:0] n_load_reg_1214;
wire   [0:0] icmp_ln390_fu_325_p2;
reg   [0:0] icmp_ln390_reg_1219;
wire   [0:0] cmp5_i151_mid1_fu_335_p2;
reg   [0:0] cmp5_i151_mid1_reg_1233;
wire   [11:0] p_mid1384_fu_367_p2;
reg   [11:0] p_mid1384_reg_1239;
reg   [4:0] tmp_131_mid_reg_1244;
reg   [6:0] tmp_132_mid_reg_1250;
wire   [0:0] xor_ln389_fu_393_p2;
reg   [0:0] xor_ln389_reg_1256;
wire   [0:0] and_ln389_3_fu_429_p2;
reg   [0:0] and_ln389_3_reg_1261;
wire   [3:0] select_ln389_8_fu_435_p3;
reg   [3:0] select_ln389_8_reg_1272;
wire   [0:0] or_ln390_fu_443_p2;
reg   [0:0] or_ln390_reg_1279;
wire   [0:0] or_ln390_1_fu_455_p2;
reg   [0:0] or_ln390_1_reg_1285;
wire   [0:0] and_ln390_2_fu_467_p2;
reg   [0:0] and_ln390_2_reg_1290;
wire   [1:0] select_ln391_fu_485_p3;
reg   [1:0] select_ln391_reg_1299;
wire   [0:0] xor_ln391_fu_493_p2;
reg   [0:0] xor_ln391_reg_1304;
wire   [0:0] and_ln391_1_fu_499_p2;
reg   [0:0] and_ln391_1_reg_1309;
wire   [1:0] add_ln392_fu_505_p2;
reg   [1:0] add_ln392_reg_1317;
reg   [4:0] i_reg_1324;
wire    ap_block_pp0_stage2_11001;
reg   [3:0] w_2_reg_1329;
wire   [3:0] add_ln390_fu_683_p2;
reg   [3:0] add_ln390_reg_1334;
wire   [0:0] select_ln390_3_fu_731_p3;
reg   [0:0] select_ln390_3_reg_1339;
wire   [4:0] add_ln391_fu_792_p2;
reg   [4:0] add_ln391_reg_1343;
wire   [9:0] select_ln391_2_fu_823_p3;
reg   [9:0] select_ln391_2_reg_1348;
wire   [11:0] select_ln392_1_fu_876_p3;
reg   [11:0] select_ln392_1_reg_1353;
wire   [0:0] or_ln396_fu_902_p2;
reg   [0:0] or_ln396_reg_1358;
wire   [7:0] add_ln399_fu_928_p2;
reg   [7:0] add_ln399_reg_1362;
wire   [6:0] tmp_5_fu_973_p4;
reg   [6:0] tmp_5_reg_1367;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] select_ln389_10_fu_983_p3;
reg   [6:0] select_ln389_10_reg_1372;
wire   [63:0] zext_ln391_fu_989_p1;
reg   [63:0] zext_ln391_reg_1378;
reg   [9:0] out4_V_addr_reg_1383;
reg   [15:0] out3_V_load_1_reg_1398;
wire   [0:0] icmp_ln1548_fu_1116_p2;
reg   [0:0] icmp_ln1548_reg_1403;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter1_stage1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln1548_fu_1001_p1;
wire   [63:0] zext_ln391_1_fu_1111_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
reg   [1:0] n_fu_106;
wire   [1:0] add_ln393_fu_934_p2;
wire    ap_loop_init;
reg   [1:0] m_fu_110;
wire   [1:0] select_ln392_3_fu_893_p3;
reg   [3:0] indvar_flatten274_fu_114;
wire   [3:0] select_ln392_4_fu_526_p3;
reg   [4:0] i_2_fu_118;
wire   [4:0] select_ln391_1_fu_798_p3;
reg   [7:0] indvar_flatten306_fu_122;
wire   [7:0] select_ln391_5_fu_540_p3;
reg   [3:0] w_fu_126;
wire   [3:0] select_ln390_7_fu_785_p3;
reg   [9:0] indvar_flatten364_fu_130;
wire   [9:0] select_ln390_8_fu_554_p3;
reg   [3:0] h_fu_134;
reg   [11:0] indvar_flatten446_fu_138;
wire   [11:0] add_ln389_1_fu_307_p2;
wire   [7:0] p_shl9_fu_247_p3;
wire   [9:0] p_shl1_fu_239_p3;
wire   [9:0] p_shl12_cast_fu_255_p1;
wire   [9:0] empty_fu_259_p2;
wire   [3:0] zext_ln392_fu_275_p1;
wire   [3:0] empty_38_fu_279_p2;
wire   [3:0] empty_39_fu_289_p0;
wire   [8:0] empty_39_fu_289_p1;
wire   [3:0] add_ln389_fu_295_p2;
wire   [7:0] p_shl12_mid1_fu_349_p3;
wire   [9:0] p_shl11_mid1_fu_341_p3;
wire   [9:0] p_shl12_cast_mid1_fu_357_p1;
wire   [3:0] p_mid1384_fu_367_p0;
wire   [8:0] p_mid1384_fu_367_p1;
wire   [9:0] p_mid1382_fu_361_p2;
wire   [0:0] icmp_ln393_fu_399_p2;
wire   [0:0] icmp_ln392_fu_411_p2;
wire   [0:0] icmp_ln391_fu_423_p2;
wire   [0:0] xor_ln390_fu_449_p2;
wire   [0:0] and_ln389_1_fu_405_p2;
wire   [0:0] and_ln389_2_fu_417_p2;
wire   [0:0] or_ln391_fu_473_p2;
wire   [0:0] or_ln391_1_fu_479_p2;
wire   [0:0] and_ln390_1_fu_461_p2;
wire   [3:0] add_ln392_1_fu_520_p2;
wire   [7:0] add_ln391_1_fu_534_p2;
wire   [9:0] add_ln390_1_fu_548_p2;
wire   [6:0] tmp_s_fu_599_p3;
wire   [0:0] cmp5_i151_fu_588_p2;
wire   [0:0] cmp6_i158_fu_593_p2;
wire   [9:0] tmp15_fu_617_p3;
wire   [9:0] p_cast113_fu_607_p1;
wire   [0:0] brmerge_i164_fu_611_p2;
wire   [9:0] tmp16_mid_fu_656_p3;
wire   [9:0] empty_36_fu_624_p2;
wire   [0:0] trunc_ln396_fu_675_p1;
wire   [3:0] select_ln389_fu_630_p3;
wire   [6:0] p_mid3_fu_702_p3;
wire   [6:0] select_ln389_2_fu_643_p3;
wire   [6:0] select_ln390_1_fu_714_p3;
wire   [0:0] select_ln389_1_fu_637_p3;
wire   [0:0] cmp6_i158_mid1_fu_696_p2;
wire   [0:0] brmerge_i164_mid1_fu_725_p2;
wire   [0:0] select_ln389_4_fu_650_p3;
wire   [4:0] select_ln389_9_fu_738_p3;
wire   [9:0] tmp16_mid2_fu_743_p3;
wire   [9:0] p_cast113_mid1_fu_710_p1;
wire   [9:0] p_mid1332_fu_751_p2;
wire   [9:0] select_ln389_5_fu_663_p3;
wire   [3:0] p_mid1354_fu_767_p0;
wire   [8:0] p_mid1354_fu_767_p1;
wire   [11:0] p_mid1354_fu_767_p2;
wire   [11:0] select_ln389_7_fu_670_p3;
wire   [0:0] and_ln389_fu_678_p2;
wire   [4:0] select_ln390_fu_689_p3;
wire   [9:0] tmp16_mid1_fu_809_p3;
wire   [9:0] select_ln390_12_cast_fu_721_p1;
wire   [9:0] p_mid1290_fu_817_p2;
wire   [9:0] select_ln390_4_fu_757_p3;
wire   [11:0] select_ln390_6_fu_773_p3;
wire   [0:0] and_ln390_fu_780_p2;
wire   [0:0] or_ln392_fu_842_p2;
wire   [0:0] or_ln392_1_fu_846_p2;
wire   [3:0] zext_ln392_1_fu_858_p1;
wire   [3:0] p_mid1270_fu_861_p2;
wire   [3:0] p_mid1272_fu_870_p0;
wire   [8:0] p_mid1272_fu_870_p1;
wire   [11:0] p_mid1272_fu_870_p2;
wire   [11:0] select_ln391_4_fu_830_p3;
wire   [0:0] trunc_ln396_1_fu_883_p1;
wire   [0:0] and_ln391_fu_837_p2;
wire   [1:0] select_ln392_fu_851_p3;
wire   [0:0] trunc_ln396_2_fu_898_p1;
wire   [0:0] select_ln392_2_fu_886_p3;
wire   [2:0] tmp_6_fu_908_p4;
wire   [7:0] select_ln391_8_cast_fu_805_p1;
wire   [7:0] shl_ln399_1_fu_918_p4;
wire   [3:0] empty_35_fu_967_p0;
wire   [8:0] empty_35_fu_967_p1;
wire   [11:0] empty_35_fu_967_p2;
wire   [11:0] zext_ln399_fu_993_p1;
wire   [11:0] add_ln399_1_fu_996_p2;
wire   [7:0] tmp_3_fu_1006_p3;
wire   [11:0] tmp16_fu_1017_p3;
wire   [11:0] p_cast115_fu_1013_p1;
wire   [11:0] tmp17_mid_fu_1036_p3;
wire   [11:0] empty_37_fu_1023_p2;
wire   [7:0] p_mid4_fu_1050_p3;
wire   [7:0] select_ln389_3_fu_1029_p3;
wire   [7:0] select_ln390_2_fu_1061_p3;
wire   [11:0] tmp17_mid2_fu_1072_p3;
wire   [11:0] p_cast115_mid1_fu_1057_p1;
wire   [11:0] p_mid1340_fu_1079_p2;
wire   [11:0] select_ln389_6_fu_1043_p3;
wire   [11:0] tmp17_mid1_fu_1092_p3;
wire   [11:0] select_ln390_13_cast_fu_1068_p1;
wire   [11:0] p_mid1292_fu_1098_p2;
wire   [11:0] select_ln390_5_fu_1085_p3;
wire   [11:0] select_ln391_3_fu_1104_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to0;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [11:0] empty_35_fu_967_p00;
wire   [11:0] empty_39_fu_289_p00;
wire   [11:0] p_mid1272_fu_870_p00;
wire   [11:0] p_mid1354_fu_767_p00;
wire   [11:0] p_mid1384_fu_367_p00;
reg    ap_condition_899;
reg    ap_condition_904;
reg    ap_condition_910;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

mydataset_lane_mul_4ns_9ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 12 ))
mul_4ns_9ns_12_1_1_U44(
    .din0(empty_39_fu_289_p0),
    .din1(empty_39_fu_289_p1),
    .dout(empty_39_fu_289_p2)
);

mydataset_lane_mul_4ns_9ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 12 ))
mul_4ns_9ns_12_1_1_U45(
    .din0(p_mid1384_fu_367_p0),
    .din1(p_mid1384_fu_367_p1),
    .dout(p_mid1384_fu_367_p2)
);

mydataset_lane_mul_4ns_9ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 12 ))
mul_4ns_9ns_12_1_1_U46(
    .din0(p_mid1354_fu_767_p0),
    .din1(p_mid1354_fu_767_p1),
    .dout(p_mid1354_fu_767_p2)
);

mydataset_lane_mul_4ns_9ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 12 ))
mul_4ns_9ns_12_1_1_U47(
    .din0(p_mid1272_fu_870_p0),
    .din1(p_mid1272_fu_870_p1),
    .dout(p_mid1272_fu_870_p2)
);

mydataset_lane_mul_4ns_9ns_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 12 ))
mul_4ns_9ns_12_1_1_U48(
    .din0(empty_35_fu_967_p0),
    .din1(empty_35_fu_967_p1),
    .dout(empty_35_fu_967_p2)
);

mydataset_lane_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        h_fu_134 <= 4'd0;
    end else if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        h_fu_134 <= select_ln389_8_reg_1272;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_2_fu_118 <= 5'd0;
    end else if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        i_2_fu_118 <= select_ln391_1_fu_798_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten274_fu_114 <= 4'd0;
    end else if (((icmp_ln389_fu_301_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten274_fu_114 <= select_ln392_4_fu_526_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten306_fu_122 <= 8'd0;
    end else if (((icmp_ln389_fu_301_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten306_fu_122 <= select_ln391_5_fu_540_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten364_fu_130 <= 10'd0;
    end else if (((icmp_ln389_fu_301_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten364_fu_130 <= select_ln390_8_fu_554_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten446_fu_138 <= 12'd0;
    end else if (((icmp_ln389_fu_301_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        indvar_flatten446_fu_138 <= add_ln389_1_fu_307_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_fu_110 <= 2'd0;
    end else if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        m_fu_110 <= select_ln392_3_fu_893_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_fu_106 <= 2'd0;
    end else if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        n_fu_106 <= add_ln393_fu_934_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_fu_126 <= 4'd0;
    end else if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        w_fu_126 <= select_ln390_7_fu_785_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln390_reg_1334 <= add_ln390_fu_683_p2;
        add_ln391_reg_1343 <= add_ln391_fu_792_p2;
        select_ln390_3_reg_1339 <= select_ln390_3_fu_731_p3;
        select_ln391_2_reg_1348 <= select_ln391_2_fu_823_p3;
        select_ln392_1_reg_1353 <= select_ln392_1_fu_876_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_fu_301_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln392_reg_1317 <= add_ln392_fu_505_p2;
        and_ln389_3_reg_1261 <= and_ln389_3_fu_429_p2;
        and_ln390_2_reg_1290 <= and_ln390_2_fu_467_p2;
        and_ln391_1_reg_1309 <= and_ln391_1_fu_499_p2;
        cmp5_i151_mid1_reg_1233 <= cmp5_i151_mid1_fu_335_p2;
        icmp_ln390_reg_1219 <= icmp_ln390_fu_325_p2;
        n_load_reg_1214 <= n_fu_106;
        or_ln390_1_reg_1285 <= or_ln390_1_fu_455_p2;
        or_ln390_reg_1279 <= or_ln390_fu_443_p2;
        p_mid1384_reg_1239 <= p_mid1384_fu_367_p2;
        select_ln389_8_reg_1272 <= select_ln389_8_fu_435_p3;
        select_ln391_reg_1299 <= select_ln391_fu_485_p3;
        tmp_131_mid_reg_1244 <= {{p_mid1382_fu_361_p2[9:5]}};
        tmp_132_mid_reg_1250 <= {{p_mid1384_fu_367_p2[11:5]}};
        xor_ln389_reg_1256 <= xor_ln389_fu_393_p2;
        xor_ln391_reg_1304 <= xor_ln391_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln396_fu_902_p2 == 1'd1) & (select_ln390_3_fu_731_p3 == 1'd0))) begin
        add_ln399_reg_1362 <= add_ln399_fu_928_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_39_reg_1205 <= empty_39_fu_289_p2;
        h_2_reg_1193 <= h_fu_134;
        icmp_ln389_reg_1210 <= icmp_ln389_fu_301_p2;
        icmp_ln389_reg_1210_pp0_iter1_reg <= icmp_ln389_reg_1210;
        m_1_reg_1188 <= m_fu_110;
        tmp_4_reg_1199 <= {{empty_fu_259_p2[9:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        i_reg_1324 <= i_2_fu_118;
        w_2_reg_1329 <= w_fu_126;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln396_reg_1358 == 1'd1) & (select_ln390_3_reg_1339 == 1'd0))) begin
        icmp_ln1548_reg_1403 <= icmp_ln1548_fu_1116_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln390_3_fu_731_p3 == 1'd0))) begin
        or_ln396_reg_1358 <= or_ln396_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln396_reg_1358 == 1'd1) & (select_ln390_3_reg_1339 == 1'd0))) begin
        out3_V_load_1_reg_1398 <= out3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (or_ln396_reg_1358 == 1'd1) & (select_ln390_3_reg_1339 == 1'd0))) begin
        out4_V_addr_reg_1383 <= zext_ln391_fu_989_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln389_reg_1210 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln389_10_reg_1372 <= select_ln389_10_fu_983_p3;
        zext_ln391_reg_1378[9 : 0] <= zext_ln391_fu_989_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_5_reg_1367 <= {{empty_35_fu_967_p2[11:5]}};
    end
end

always @ (*) begin
    if (((icmp_ln389_reg_1210 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln389_reg_1210 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            out3_V_address0 = zext_ln391_1_fu_1111_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out3_V_address0 = zext_ln1548_fu_1001_p1;
        end else begin
            out3_V_address0 = 'bx;
        end
    end else begin
        out3_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out3_V_ce0 = 1'b1;
    end else begin
        out3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if ((1'b1 == ap_condition_904)) begin
            out4_V_address0 = out4_V_addr_reg_1383;
        end else if ((1'b1 == ap_condition_899)) begin
            out4_V_address0 = zext_ln391_reg_1378;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            out4_V_address0 = zext_ln391_fu_989_p1;
        end else begin
            out4_V_address0 = 'bx;
        end
    end else begin
        out4_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1548_reg_1403 == 1'd1) & (or_ln396_reg_1358 == 1'd1) & (select_ln390_3_reg_1339 == 1'd0)) | ((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln396_reg_1358 == 1'd0) & (select_ln390_3_reg_1339 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        out4_V_ce0 = 1'b1;
    end else begin
        out4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_910)) begin
        if (((icmp_ln1548_reg_1403 == 1'd1) & (or_ln396_reg_1358 == 1'd1))) begin
            out4_V_d0 = out3_V_load_1_reg_1398;
        end else if ((or_ln396_reg_1358 == 1'd0)) begin
            out4_V_d0 = out3_V_q0;
        end else begin
            out4_V_d0 = 'bx;
        end
    end else begin
        out4_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1548_reg_1403 == 1'd1) & (or_ln396_reg_1358 == 1'd1) & (select_ln390_3_reg_1339 == 1'd0)) | ((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln396_reg_1358 == 1'd0) & (select_ln390_3_reg_1339 == 1'd0)))) begin
        out4_V_we0 = 1'b1;
    end else begin
        out4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln389_1_fu_307_p2 = (indvar_flatten446_fu_138 + 12'd1);

assign add_ln389_fu_295_p2 = (h_fu_134 + 4'd2);

assign add_ln390_1_fu_548_p2 = (indvar_flatten364_fu_130 + 10'd1);

assign add_ln390_fu_683_p2 = (select_ln389_fu_630_p3 + 4'd2);

assign add_ln391_1_fu_534_p2 = (indvar_flatten306_fu_122 + 8'd1);

assign add_ln391_fu_792_p2 = (select_ln390_fu_689_p3 + 5'd1);

assign add_ln392_1_fu_520_p2 = (indvar_flatten274_fu_114 + 4'd1);

assign add_ln392_fu_505_p2 = (select_ln391_fu_485_p3 + 2'd1);

assign add_ln393_fu_934_p2 = (select_ln392_fu_851_p3 + 2'd1);

assign add_ln399_1_fu_996_p2 = (zext_ln399_fu_993_p1 + select_ln392_1_reg_1353);

assign add_ln399_fu_928_p2 = (select_ln391_8_cast_fu_805_p1 + shl_ln399_1_fu_918_p4);

assign and_ln389_1_fu_405_p2 = (xor_ln389_fu_393_p2 & icmp_ln393_fu_399_p2);

assign and_ln389_2_fu_417_p2 = (xor_ln389_fu_393_p2 & icmp_ln392_fu_411_p2);

assign and_ln389_3_fu_429_p2 = (xor_ln389_fu_393_p2 & icmp_ln391_fu_423_p2);

assign and_ln389_fu_678_p2 = (xor_ln389_reg_1256 & trunc_ln396_fu_675_p1);

assign and_ln390_1_fu_461_p2 = (or_ln390_1_fu_455_p2 & and_ln389_1_fu_405_p2);

assign and_ln390_2_fu_467_p2 = (or_ln390_1_fu_455_p2 & and_ln389_2_fu_417_p2);

assign and_ln390_fu_780_p2 = (or_ln390_1_reg_1285 & and_ln389_fu_678_p2);

assign and_ln391_1_fu_499_p2 = (xor_ln391_fu_493_p2 & and_ln390_1_fu_461_p2);

assign and_ln391_fu_837_p2 = (xor_ln391_reg_1304 & and_ln390_fu_780_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_899 = ((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln396_reg_1358 == 1'd0) & (select_ln390_3_reg_1339 == 1'd0));
end

always @ (*) begin
    ap_condition_904 = ((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1548_reg_1403 == 1'd1) & (or_ln396_reg_1358 == 1'd1) & (select_ln390_3_reg_1339 == 1'd0));
end

always @ (*) begin
    ap_condition_910 = ((icmp_ln389_reg_1210_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln390_3_reg_1339 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign brmerge_i164_fu_611_p2 = (cmp6_i158_fu_593_p2 | cmp5_i151_fu_588_p2);

assign brmerge_i164_mid1_fu_725_p2 = (select_ln389_1_fu_637_p3 | cmp6_i158_mid1_fu_696_p2);

assign cmp5_i151_fu_588_p2 = ((h_2_reg_1193 > 4'd11) ? 1'b1 : 1'b0);

assign cmp5_i151_mid1_fu_335_p2 = ((add_ln389_fu_295_p2 > 4'd11) ? 1'b1 : 1'b0);

assign cmp6_i158_fu_593_p2 = ((w_fu_126 > 4'd11) ? 1'b1 : 1'b0);

assign cmp6_i158_mid1_fu_696_p2 = ((add_ln390_fu_683_p2 > 4'd11) ? 1'b1 : 1'b0);

assign empty_35_fu_967_p0 = empty_35_fu_967_p00;

assign empty_35_fu_967_p00 = h_2_reg_1193;

assign empty_35_fu_967_p1 = 12'd208;

assign empty_36_fu_624_p2 = (tmp15_fu_617_p3 + p_cast113_fu_607_p1);

assign empty_37_fu_1023_p2 = (tmp16_fu_1017_p3 + p_cast115_fu_1013_p1);

assign empty_38_fu_279_p2 = (zext_ln392_fu_275_p1 + h_fu_134);

assign empty_39_fu_289_p0 = empty_39_fu_289_p00;

assign empty_39_fu_289_p00 = empty_38_fu_279_p2;

assign empty_39_fu_289_p1 = 12'd208;

assign empty_fu_259_p2 = (p_shl1_fu_239_p3 - p_shl12_cast_fu_255_p1);

assign icmp_ln1548_fu_1116_p2 = (($signed(out4_V_q0) < $signed(out3_V_q0)) ? 1'b1 : 1'b0);

assign icmp_ln389_fu_301_p2 = ((indvar_flatten446_fu_138 == 12'd3136) ? 1'b1 : 1'b0);

assign icmp_ln390_fu_325_p2 = ((indvar_flatten364_fu_130 == 10'd448) ? 1'b1 : 1'b0);

assign icmp_ln391_fu_423_p2 = ((indvar_flatten306_fu_122 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln392_fu_411_p2 = ((indvar_flatten274_fu_114 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln393_fu_399_p2 = ((n_fu_106 == 2'd2) ? 1'b1 : 1'b0);

assign or_ln390_1_fu_455_p2 = (xor_ln390_fu_449_p2 | icmp_ln390_fu_325_p2);

assign or_ln390_fu_443_p2 = (icmp_ln390_fu_325_p2 | and_ln389_3_fu_429_p2);

assign or_ln391_1_fu_479_p2 = (or_ln391_fu_473_p2 | icmp_ln390_fu_325_p2);

assign or_ln391_fu_473_p2 = (and_ln390_2_fu_467_p2 | and_ln389_3_fu_429_p2);

assign or_ln392_1_fu_846_p2 = (or_ln392_fu_842_p2 | or_ln390_reg_1279);

assign or_ln392_fu_842_p2 = (and_ln391_1_reg_1309 | and_ln390_2_reg_1290);

assign or_ln396_fu_902_p2 = (trunc_ln396_2_fu_898_p1 | select_ln392_2_fu_886_p3);

assign p_cast113_fu_607_p1 = tmp_s_fu_599_p3;

assign p_cast113_mid1_fu_710_p1 = p_mid3_fu_702_p3;

assign p_cast115_fu_1013_p1 = tmp_3_fu_1006_p3;

assign p_cast115_mid1_fu_1057_p1 = p_mid4_fu_1050_p3;

assign p_mid1270_fu_861_p2 = (zext_ln392_1_fu_858_p1 + select_ln389_8_reg_1272);

assign p_mid1272_fu_870_p0 = p_mid1272_fu_870_p00;

assign p_mid1272_fu_870_p00 = p_mid1270_fu_861_p2;

assign p_mid1272_fu_870_p1 = 12'd208;

assign p_mid1290_fu_817_p2 = (tmp16_mid1_fu_809_p3 + select_ln390_12_cast_fu_721_p1);

assign p_mid1292_fu_1098_p2 = (tmp17_mid1_fu_1092_p3 + select_ln390_13_cast_fu_1068_p1);

assign p_mid1332_fu_751_p2 = (tmp16_mid2_fu_743_p3 + p_cast113_mid1_fu_710_p1);

assign p_mid1340_fu_1079_p2 = (tmp17_mid2_fu_1072_p3 + p_cast115_mid1_fu_1057_p1);

assign p_mid1354_fu_767_p0 = p_mid1354_fu_767_p00;

assign p_mid1354_fu_767_p00 = select_ln389_8_reg_1272;

assign p_mid1354_fu_767_p1 = 12'd208;

assign p_mid1382_fu_361_p2 = (p_shl11_mid1_fu_341_p3 - p_shl12_cast_mid1_fu_357_p1);

assign p_mid1384_fu_367_p0 = p_mid1384_fu_367_p00;

assign p_mid1384_fu_367_p00 = add_ln389_fu_295_p2;

assign p_mid1384_fu_367_p1 = 12'd208;

assign p_mid3_fu_702_p3 = {{add_ln390_fu_683_p2}, {3'd0}};

assign p_mid4_fu_1050_p3 = {{add_ln390_reg_1334}, {4'd0}};

assign p_shl11_mid1_fu_341_p3 = {{add_ln389_fu_295_p2}, {6'd0}};

assign p_shl12_cast_fu_255_p1 = p_shl9_fu_247_p3;

assign p_shl12_cast_mid1_fu_357_p1 = p_shl12_mid1_fu_349_p3;

assign p_shl12_mid1_fu_349_p3 = {{add_ln389_fu_295_p2}, {4'd0}};

assign p_shl1_fu_239_p3 = {{h_fu_134}, {6'd0}};

assign p_shl9_fu_247_p3 = {{h_fu_134}, {4'd0}};

assign select_ln389_10_fu_983_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? tmp_132_mid_reg_1250 : tmp_5_fu_973_p4);

assign select_ln389_1_fu_637_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? cmp5_i151_mid1_reg_1233 : cmp5_i151_fu_588_p2);

assign select_ln389_2_fu_643_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? 7'd0 : tmp_s_fu_599_p3);

assign select_ln389_3_fu_1029_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? 8'd0 : tmp_3_fu_1006_p3);

assign select_ln389_4_fu_650_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? cmp5_i151_mid1_reg_1233 : brmerge_i164_fu_611_p2);

assign select_ln389_5_fu_663_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? tmp16_mid_fu_656_p3 : empty_36_fu_624_p2);

assign select_ln389_6_fu_1043_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? tmp17_mid_fu_1036_p3 : empty_37_fu_1023_p2);

assign select_ln389_7_fu_670_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? p_mid1384_reg_1239 : empty_39_reg_1205);

assign select_ln389_8_fu_435_p3 = ((icmp_ln390_fu_325_p2[0:0] == 1'b1) ? add_ln389_fu_295_p2 : h_fu_134);

assign select_ln389_9_fu_738_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? tmp_131_mid_reg_1244 : tmp_4_reg_1199);

assign select_ln389_fu_630_p3 = ((icmp_ln390_reg_1219[0:0] == 1'b1) ? 4'd0 : w_fu_126);

assign select_ln390_12_cast_fu_721_p1 = select_ln390_1_fu_714_p3;

assign select_ln390_13_cast_fu_1068_p1 = select_ln390_2_fu_1061_p3;

assign select_ln390_1_fu_714_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? p_mid3_fu_702_p3 : select_ln389_2_fu_643_p3);

assign select_ln390_2_fu_1061_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? p_mid4_fu_1050_p3 : select_ln389_3_fu_1029_p3);

assign select_ln390_3_fu_731_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? brmerge_i164_mid1_fu_725_p2 : select_ln389_4_fu_650_p3);

assign select_ln390_4_fu_757_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? p_mid1332_fu_751_p2 : select_ln389_5_fu_663_p3);

assign select_ln390_5_fu_1085_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? p_mid1340_fu_1079_p2 : select_ln389_6_fu_1043_p3);

assign select_ln390_6_fu_773_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? p_mid1354_fu_767_p2 : select_ln389_7_fu_670_p3);

assign select_ln390_7_fu_785_p3 = ((and_ln389_3_reg_1261[0:0] == 1'b1) ? add_ln390_fu_683_p2 : select_ln389_fu_630_p3);

assign select_ln390_8_fu_554_p3 = ((icmp_ln390_fu_325_p2[0:0] == 1'b1) ? 10'd1 : add_ln390_1_fu_548_p2);

assign select_ln390_fu_689_p3 = ((or_ln390_reg_1279[0:0] == 1'b1) ? 5'd0 : i_2_fu_118);

assign select_ln391_1_fu_798_p3 = ((and_ln390_2_reg_1290[0:0] == 1'b1) ? add_ln391_fu_792_p2 : select_ln390_fu_689_p3);

assign select_ln391_2_fu_823_p3 = ((and_ln390_2_reg_1290[0:0] == 1'b1) ? p_mid1290_fu_817_p2 : select_ln390_4_fu_757_p3);

assign select_ln391_3_fu_1104_p3 = ((and_ln390_2_reg_1290[0:0] == 1'b1) ? p_mid1292_fu_1098_p2 : select_ln390_5_fu_1085_p3);

assign select_ln391_4_fu_830_p3 = ((and_ln390_2_reg_1290[0:0] == 1'b1) ? p_mid1354_fu_767_p2 : select_ln390_6_fu_773_p3);

assign select_ln391_5_fu_540_p3 = ((or_ln390_fu_443_p2[0:0] == 1'b1) ? 8'd1 : add_ln391_1_fu_534_p2);

assign select_ln391_8_cast_fu_805_p1 = select_ln391_1_fu_798_p3;

assign select_ln391_fu_485_p3 = ((or_ln391_1_fu_479_p2[0:0] == 1'b1) ? 2'd0 : m_fu_110);

assign select_ln392_1_fu_876_p3 = ((and_ln391_1_reg_1309[0:0] == 1'b1) ? p_mid1272_fu_870_p2 : select_ln391_4_fu_830_p3);

assign select_ln392_2_fu_886_p3 = ((and_ln391_1_reg_1309[0:0] == 1'b1) ? trunc_ln396_1_fu_883_p1 : and_ln391_fu_837_p2);

assign select_ln392_3_fu_893_p3 = ((and_ln391_1_reg_1309[0:0] == 1'b1) ? add_ln392_reg_1317 : select_ln391_reg_1299);

assign select_ln392_4_fu_526_p3 = ((or_ln391_1_fu_479_p2[0:0] == 1'b1) ? 4'd1 : add_ln392_1_fu_520_p2);

assign select_ln392_fu_851_p3 = ((or_ln392_1_fu_846_p2[0:0] == 1'b1) ? 2'd0 : n_load_reg_1214);

assign shl_ln399_1_fu_918_p4 = {{{tmp_6_fu_908_p4}, {trunc_ln396_2_fu_898_p1}}, {4'd0}};

assign tmp15_fu_617_p3 = {{tmp_4_reg_1199}, {i_2_fu_118}};

assign tmp16_fu_1017_p3 = {{tmp_5_reg_1367}, {i_reg_1324}};

assign tmp16_mid1_fu_809_p3 = {{select_ln389_9_fu_738_p3}, {add_ln391_fu_792_p2}};

assign tmp16_mid2_fu_743_p3 = {{select_ln389_9_fu_738_p3}, {5'd0}};

assign tmp16_mid_fu_656_p3 = {{tmp_131_mid_reg_1244}, {5'd0}};

assign tmp17_mid1_fu_1092_p3 = {{select_ln389_10_reg_1372}, {add_ln391_reg_1343}};

assign tmp17_mid2_fu_1072_p3 = {{select_ln389_10_reg_1372}, {5'd0}};

assign tmp17_mid_fu_1036_p3 = {{tmp_132_mid_reg_1250}, {5'd0}};

assign tmp_3_fu_1006_p3 = {{w_2_reg_1329}, {4'd0}};

assign tmp_5_fu_973_p4 = {{empty_35_fu_967_p2[11:5]}};

assign tmp_6_fu_908_p4 = {{select_ln390_7_fu_785_p3[3:1]}};

assign tmp_s_fu_599_p3 = {{w_fu_126}, {3'd0}};

assign trunc_ln396_1_fu_883_p1 = add_ln392_reg_1317[0:0];

assign trunc_ln396_2_fu_898_p1 = select_ln392_fu_851_p3[0:0];

assign trunc_ln396_fu_675_p1 = m_1_reg_1188[0:0];

assign xor_ln389_fu_393_p2 = (icmp_ln390_fu_325_p2 ^ 1'd1);

assign xor_ln390_fu_449_p2 = (icmp_ln391_fu_423_p2 ^ 1'd1);

assign xor_ln391_fu_493_p2 = (1'd1 ^ and_ln390_2_fu_467_p2);

assign zext_ln1548_fu_1001_p1 = add_ln399_1_fu_996_p2;

assign zext_ln391_1_fu_1111_p1 = select_ln391_3_fu_1104_p3;

assign zext_ln391_fu_989_p1 = select_ln391_2_reg_1348;

assign zext_ln392_1_fu_858_p1 = add_ln392_reg_1317;

assign zext_ln392_fu_275_p1 = m_fu_110;

assign zext_ln399_fu_993_p1 = add_ln399_reg_1362;

always @ (posedge ap_clk) begin
    zext_ln391_reg_1378[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
end

endmodule //mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_389_1_VITIS_LOOP_391_3_VITIS_LOOP_392_4_VITIS_LOOP_393_52
