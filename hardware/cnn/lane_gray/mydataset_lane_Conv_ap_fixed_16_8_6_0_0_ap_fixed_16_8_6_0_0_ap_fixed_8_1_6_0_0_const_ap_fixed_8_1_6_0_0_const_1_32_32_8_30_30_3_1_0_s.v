// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mydataset_lane_Conv_ap_fixed_16_8_6_0_0_ap_fixed_16_8_6_0_0_ap_fixed_8_1_6_0_0_const_ap_fixed_8_1_6_0_0_const_1_32_32_8_30_30_3_1_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_r_address0,
        in_r_ce0,
        in_r_q0,
        in_r_address1,
        in_r_ce1,
        in_r_q1,
        in_r_address2,
        in_r_ce2,
        in_r_q2,
        in_r_address3,
        in_r_ce3,
        in_r_q3,
        in_r_address4,
        in_r_ce4,
        in_r_q4,
        in_r_address5,
        in_r_ce5,
        in_r_q5,
        in_r_address6,
        in_r_ce6,
        in_r_q6,
        in_r_address7,
        in_r_ce7,
        in_r_q7,
        in_r_address8,
        in_r_ce8,
        in_r_q8,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] in_r_address0;
output   in_r_ce0;
input  [7:0] in_r_q0;
output  [9:0] in_r_address1;
output   in_r_ce1;
input  [7:0] in_r_q1;
output  [9:0] in_r_address2;
output   in_r_ce2;
input  [7:0] in_r_q2;
output  [9:0] in_r_address3;
output   in_r_ce3;
input  [7:0] in_r_q3;
output  [9:0] in_r_address4;
output   in_r_ce4;
input  [7:0] in_r_q4;
output  [9:0] in_r_address5;
output   in_r_ce5;
input  [7:0] in_r_q5;
output  [9:0] in_r_address6;
output   in_r_ce6;
input  [7:0] in_r_q6;
output  [9:0] in_r_address7;
output   in_r_ce7;
input  [7:0] in_r_q7;
output  [9:0] in_r_address8;
output   in_r_ce8;
input  [7:0] in_r_q8;
output  [12:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [15:0] out_r_d0;

reg ap_idle;
reg in_r_ce0;
reg in_r_ce1;
reg in_r_ce2;
reg in_r_ce3;
reg in_r_ce4;
reg in_r_ce5;
reg in_r_ce6;
reg in_r_ce7;
reg in_r_ce8;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln237_fu_436_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] layers_0_bias_V_address0;
reg    layers_0_bias_V_ce0;
wire   [7:0] layers_0_bias_V_q0;
wire   [6:0] layers_0_weight_V_address0;
reg    layers_0_weight_V_ce0;
wire   [7:0] layers_0_weight_V_q0;
wire   [6:0] layers_0_weight_V_address1;
reg    layers_0_weight_V_ce1;
wire   [7:0] layers_0_weight_V_q1;
wire   [6:0] layers_0_weight_V_address2;
reg    layers_0_weight_V_ce2;
wire  signed [7:0] layers_0_weight_V_q2;
wire   [6:0] layers_0_weight_V_address3;
reg    layers_0_weight_V_ce3;
wire  signed [7:0] layers_0_weight_V_q3;
wire   [6:0] layers_0_weight_V_address4;
reg    layers_0_weight_V_ce4;
wire   [7:0] layers_0_weight_V_q4;
wire   [6:0] layers_0_weight_V_address5;
reg    layers_0_weight_V_ce5;
wire  signed [7:0] layers_0_weight_V_q5;
wire   [6:0] layers_0_weight_V_address6;
reg    layers_0_weight_V_ce6;
wire  signed [7:0] layers_0_weight_V_q6;
wire   [6:0] layers_0_weight_V_address7;
reg    layers_0_weight_V_ce7;
wire  signed [7:0] layers_0_weight_V_q7;
wire   [6:0] layers_0_weight_V_address8;
reg    layers_0_weight_V_ce8;
wire  signed [7:0] layers_0_weight_V_q8;
reg   [0:0] icmp_ln237_reg_3406;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln237_reg_3406_pp0_iter1_reg;
wire   [0:0] icmp_ln238_fu_451_p2;
reg   [0:0] icmp_ln238_reg_3410;
reg   [0:0] icmp_ln238_reg_3410_pp0_iter1_reg;
reg   [4:0] w_6_reg_3431;
reg   [4:0] h_4_reg_3440;
reg   [4:0] tmp_7_reg_3448;
reg   [4:0] tmp_8_reg_3456;
wire   [4:0] select_ln237_fu_538_p3;
reg   [4:0] select_ln237_reg_3464;
wire   [4:0] empty_189_fu_545_p2;
reg   [4:0] empty_189_reg_3470;
reg   [4:0] tmp_202_mid_reg_3478;
reg   [4:0] tmp_205_mid_reg_3486;
wire   [0:0] and_ln237_fu_609_p2;
reg   [0:0] and_ln237_reg_3494;
wire   [4:0] select_ln237_14_fu_615_p3;
reg   [4:0] select_ln237_14_reg_3507;
wire   [4:0] add_ln246_2_fu_622_p2;
reg   [4:0] add_ln246_2_reg_3513;
wire   [3:0] select_ln238_fu_641_p3;
reg   [3:0] select_ln238_reg_3520;
reg   [3:0] select_ln238_reg_3520_pp0_iter2_reg;
wire   [9:0] select_ln238_5_fu_649_p3;
reg   [9:0] select_ln238_5_reg_3527;
wire   [2:0] empty_190_fu_665_p1;
reg   [2:0] empty_190_reg_3532;
reg   [2:0] empty_190_reg_3532_pp0_iter2_reg;
wire   [12:0] add_ln240_fu_1160_p2;
reg   [12:0] add_ln240_reg_3582;
reg   [12:0] add_ln240_reg_3582_pp0_iter3_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter4_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter5_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter6_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter7_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter8_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter9_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter10_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter11_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter12_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter13_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter14_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter15_reg;
reg   [12:0] add_ln240_reg_3582_pp0_iter16_reg;
reg   [7:0] in_load_reg_3587;
reg   [7:0] in_load_1_reg_3592;
reg   [7:0] in_load_1_reg_3592_pp0_iter4_reg;
reg   [7:0] in_load_2_reg_3597;
reg   [7:0] in_load_2_reg_3597_pp0_iter4_reg;
reg   [7:0] in_load_2_reg_3597_pp0_iter5_reg;
reg   [7:0] in_load_2_reg_3597_pp0_iter6_reg;
reg   [7:0] in_load_3_reg_3602;
reg   [7:0] in_load_3_reg_3602_pp0_iter4_reg;
reg   [7:0] in_load_3_reg_3602_pp0_iter5_reg;
reg   [7:0] in_load_3_reg_3602_pp0_iter6_reg;
reg   [7:0] in_load_3_reg_3602_pp0_iter7_reg;
reg   [7:0] in_load_4_reg_3607;
reg   [7:0] in_load_4_reg_3607_pp0_iter4_reg;
reg   [7:0] in_load_4_reg_3607_pp0_iter5_reg;
reg   [7:0] in_load_4_reg_3607_pp0_iter6_reg;
reg   [7:0] in_load_4_reg_3607_pp0_iter7_reg;
reg   [7:0] in_load_4_reg_3607_pp0_iter8_reg;
reg   [7:0] in_load_4_reg_3607_pp0_iter9_reg;
reg   [7:0] in_load_5_reg_3612;
reg   [7:0] in_load_5_reg_3612_pp0_iter4_reg;
reg   [7:0] in_load_5_reg_3612_pp0_iter5_reg;
reg   [7:0] in_load_5_reg_3612_pp0_iter6_reg;
reg   [7:0] in_load_5_reg_3612_pp0_iter7_reg;
reg   [7:0] in_load_5_reg_3612_pp0_iter8_reg;
reg   [7:0] in_load_5_reg_3612_pp0_iter9_reg;
reg   [7:0] in_load_5_reg_3612_pp0_iter10_reg;
reg   [7:0] in_load_6_reg_3617;
reg   [7:0] in_load_6_reg_3617_pp0_iter4_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter5_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter6_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter7_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter8_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter9_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter10_reg;
reg   [7:0] in_load_6_reg_3617_pp0_iter11_reg;
reg   [7:0] in_load_7_reg_3622;
reg   [7:0] in_load_7_reg_3622_pp0_iter4_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter5_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter6_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter7_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter8_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter9_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter10_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter11_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter12_reg;
reg   [7:0] in_load_7_reg_3622_pp0_iter13_reg;
reg   [7:0] in_load_8_reg_3627;
reg   [7:0] in_load_8_reg_3627_pp0_iter4_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter5_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter6_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter7_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter8_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter9_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter10_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter11_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter12_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter13_reg;
reg   [7:0] in_load_8_reg_3627_pp0_iter14_reg;
wire   [5:0] empty_191_fu_1180_p2;
reg   [5:0] empty_191_reg_3637;
reg   [7:0] layers_0_bias_V_load_reg_3647;
wire   [6:0] zext_ln1171_64_fu_1194_p1;
reg   [6:0] zext_ln1171_64_reg_3652;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter5_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter6_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter7_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter8_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter9_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter10_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter11_reg;
reg   [6:0] zext_ln1171_64_reg_3652_pp0_iter12_reg;
wire  signed [15:0] mul_ln1171_fu_1201_p2;
reg  signed [15:0] mul_ln1171_reg_3663;
wire   [6:0] trunc_ln414_fu_1207_p1;
reg   [6:0] trunc_ln414_reg_3668;
wire  signed [10:0] add_ln415_fu_1290_p2;
reg  signed [10:0] add_ln415_reg_3678;
wire   [0:0] and_ln794_fu_1392_p2;
reg   [0:0] and_ln794_reg_3683;
wire   [0:0] or_ln340_fu_1422_p2;
reg   [0:0] or_ln340_reg_3688;
wire  signed [15:0] mul_ln1171_64_fu_1432_p2;
reg  signed [15:0] mul_ln1171_64_reg_3693;
wire   [6:0] trunc_ln414_64_fu_1438_p1;
reg   [6:0] trunc_ln414_64_reg_3699;
wire   [23:0] add_ln1245_65_fu_1477_p2;
reg   [23:0] add_ln1245_65_reg_3704;
wire   [0:0] tmp_325_fu_1489_p3;
reg   [0:0] tmp_325_reg_3709;
reg   [0:0] tmp_326_reg_3715;
wire   [15:0] add_ln415_64_fu_1530_p2;
reg   [15:0] add_ln415_64_reg_3721;
reg   [0:0] tmp_327_reg_3726;
reg   [0:0] tmp_328_reg_3733;
wire  signed [15:0] mul_ln1171_65_fu_1674_p2;
reg  signed [15:0] mul_ln1171_65_reg_3745;
wire   [15:0] select_ln340_1_fu_1688_p3;
reg   [15:0] select_ln340_1_reg_3751;
wire   [6:0] trunc_ln414_65_fu_1695_p1;
reg   [6:0] trunc_ln414_65_reg_3756;
wire   [0:0] tmp_330_fu_1741_p3;
reg   [0:0] tmp_330_reg_3766;
wire   [0:0] tmp_331_fu_1759_p3;
reg   [0:0] tmp_331_reg_3771;
wire   [15:0] add_ln415_65_fu_1782_p2;
reg   [15:0] add_ln415_65_reg_3776;
wire   [0:0] xor_ln795_133_fu_1796_p2;
reg   [0:0] xor_ln795_133_reg_3781;
wire   [0:0] tmp_333_fu_1802_p3;
reg   [0:0] tmp_333_reg_3786;
wire   [0:0] and_ln794_65_fu_1872_p2;
reg   [0:0] and_ln794_65_reg_3791;
wire   [0:0] or_ln795_65_fu_1884_p2;
reg   [0:0] or_ln795_65_reg_3797;
wire  signed [15:0] mul_ln1171_66_fu_1894_p2;
reg  signed [15:0] mul_ln1171_66_reg_3802;
wire   [6:0] trunc_ln414_66_fu_1900_p1;
reg   [6:0] trunc_ln414_66_reg_3808;
wire   [23:0] add_ln1245_67_fu_1970_p2;
reg   [23:0] add_ln1245_67_reg_3818;
wire   [0:0] tmp_335_fu_1982_p3;
reg   [0:0] tmp_335_reg_3823;
reg   [0:0] tmp_336_reg_3829;
wire   [15:0] add_ln415_66_fu_2023_p2;
reg   [15:0] add_ln415_66_reg_3835;
reg   [0:0] tmp_337_reg_3840;
reg   [0:0] tmp_338_reg_3847;
reg  signed [7:0] layers_0_weight_V_load_4_reg_3854;
wire   [23:0] add_ln1245_68_fu_2197_p2;
reg   [23:0] add_ln1245_68_reg_3859;
wire   [22:0] add_ln709_65_fu_2203_p2;
reg   [22:0] add_ln709_65_reg_3864;
reg   [0:0] tmp_340_reg_3869;
reg   [0:0] tmp_341_reg_3876;
wire   [0:0] icmp_ln414_67_fu_2229_p2;
reg   [0:0] icmp_ln414_67_reg_3882;
reg   [0:0] tmp_343_reg_3887;
wire  signed [15:0] mul_ln1171_68_fu_2399_p2;
reg  signed [15:0] mul_ln1171_68_reg_3899;
wire   [15:0] select_ln340_4_fu_2413_p3;
reg   [15:0] select_ln340_4_reg_3905;
wire   [6:0] trunc_ln414_68_fu_2421_p1;
reg   [6:0] trunc_ln414_68_reg_3910;
wire   [0:0] tmp_345_fu_2467_p3;
reg   [0:0] tmp_345_reg_3920;
wire   [0:0] tmp_346_fu_2485_p3;
reg   [0:0] tmp_346_reg_3925;
wire   [15:0] add_ln415_68_fu_2508_p2;
reg   [15:0] add_ln415_68_reg_3930;
wire   [0:0] xor_ln795_139_fu_2522_p2;
reg   [0:0] xor_ln795_139_reg_3935;
wire   [0:0] tmp_348_fu_2528_p3;
reg   [0:0] tmp_348_reg_3940;
wire   [0:0] and_ln794_68_fu_2598_p2;
reg   [0:0] and_ln794_68_reg_3945;
wire   [0:0] or_ln795_68_fu_2610_p2;
reg   [0:0] or_ln795_68_reg_3951;
wire  signed [15:0] mul_ln1171_69_fu_2620_p2;
reg  signed [15:0] mul_ln1171_69_reg_3956;
wire   [6:0] trunc_ln414_69_fu_2626_p1;
reg   [6:0] trunc_ln414_69_reg_3962;
wire   [23:0] add_ln1245_70_fu_2696_p2;
reg   [23:0] add_ln1245_70_reg_3972;
wire   [0:0] tmp_350_fu_2708_p3;
reg   [0:0] tmp_350_reg_3977;
reg   [0:0] tmp_351_reg_3983;
wire   [15:0] add_ln415_69_fu_2749_p2;
reg   [15:0] add_ln415_69_reg_3989;
reg   [0:0] tmp_352_reg_3994;
reg   [0:0] tmp_353_reg_4001;
reg  signed [7:0] layers_0_weight_V_load_7_reg_4008;
wire   [23:0] add_ln1245_71_fu_2933_p2;
reg   [23:0] add_ln1245_71_reg_4018;
wire   [22:0] add_ln709_68_fu_2939_p2;
reg   [22:0] add_ln709_68_reg_4023;
reg   [0:0] tmp_355_reg_4028;
reg   [0:0] tmp_356_reg_4035;
wire   [0:0] icmp_ln414_70_fu_2965_p2;
reg   [0:0] icmp_ln414_70_reg_4041;
reg   [0:0] tmp_358_reg_4046;
reg  signed [7:0] layers_0_weight_V_load_8_reg_4053;
wire  signed [15:0] mul_ln1171_71_fu_3124_p2;
reg  signed [15:0] mul_ln1171_71_reg_4058;
wire   [15:0] select_ln340_7_fu_3138_p3;
reg   [15:0] select_ln340_7_reg_4064;
wire   [0:0] icmp_ln414_71_fu_3150_p2;
reg   [0:0] icmp_ln414_71_reg_4069;
wire   [0:0] tmp_360_fu_3185_p3;
reg   [0:0] tmp_360_reg_4074;
wire   [0:0] tmp_361_fu_3203_p3;
reg   [0:0] tmp_361_reg_4079;
wire   [15:0] add_ln415_71_fu_3220_p2;
reg   [15:0] add_ln415_71_reg_4084;
wire   [0:0] xor_ln795_145_fu_3234_p2;
reg   [0:0] xor_ln795_145_reg_4089;
wire   [0:0] tmp_363_fu_3240_p3;
reg   [0:0] tmp_363_reg_4094;
wire   [0:0] and_ln794_71_fu_3310_p2;
reg   [0:0] and_ln794_71_reg_4099;
wire   [0:0] or_ln795_71_fu_3322_p2;
reg   [0:0] or_ln795_71_reg_4105;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [63:0] zext_ln238_fu_975_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln238_2_fu_993_p1;
wire   [63:0] zext_ln238_4_fu_1017_p1;
wire   [63:0] zext_ln238_6_fu_1029_p1;
wire   [63:0] zext_ln238_8_fu_1049_p1;
wire   [63:0] zext_ln238_10_fu_1069_p1;
wire   [63:0] zext_ln238_12_fu_1081_p1;
wire   [63:0] zext_ln238_14_fu_1101_p1;
wire   [63:0] zext_ln238_16_fu_1121_p1;
wire   [63:0] oc_cast15_fu_1166_p1;
wire   [63:0] zext_ln1171_fu_1186_p1;
wire   [63:0] zext_ln1171_65_fu_1217_p1;
wire   [63:0] zext_ln1171_66_fu_1557_p1;
wire   [63:0] zext_ln1171_67_fu_1704_p1;
wire   [63:0] zext_ln1171_68_fu_1909_p1;
wire   [63:0] zext_ln1171_69_fu_2248_p1;
wire   [63:0] zext_ln1171_70_fu_2430_p1;
wire   [63:0] zext_ln1171_71_fu_2635_p1;
wire   [63:0] zext_ln1171_72_fu_2776_p1;
wire   [63:0] zext_ln240_fu_3328_p1;
reg   [3:0] oc_fu_144;
wire   [3:0] add_ln239_fu_669_p2;
wire    ap_loop_init;
reg   [4:0] w_fu_148;
wire   [4:0] select_ln238_14_fu_657_p3;
reg   [8:0] indvar_flatten_fu_152;
wire   [8:0] select_ln238_15_fu_463_p3;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [4:0] h_fu_156;
reg   [12:0] indvar_flatten147_fu_160;
wire   [12:0] add_ln237_fu_442_p2;
reg   [12:0] ap_sig_allocacmp_indvar_flatten147_load;
wire   [8:0] add_ln238_fu_457_p2;
wire   [9:0] tmp_fu_487_p3;
wire   [9:0] empty_186_fu_495_p2;
wire   [9:0] empty_187_fu_501_p2;
wire   [9:0] p_mid_fu_551_p3;
wire   [9:0] add_ln_fu_507_p3;
wire   [9:0] p_mid147_fu_559_p2;
wire   [9:0] p_mid149_fu_565_p2;
wire   [0:0] icmp_ln239_fu_603_p2;
wire   [0:0] xor_ln237_fu_598_p2;
wire   [0:0] or_ln238_fu_636_p2;
wire   [9:0] add_ln1169_1_dup_fu_628_p3;
wire   [9:0] select_ln237_5_fu_571_p3;
wire   [8:0] p_shl6_fu_697_p3;
wire   [12:0] p_shl_fu_690_p3;
wire   [12:0] p_shl6_cast_fu_704_p1;
wire   [4:0] add_ln246_fu_721_p2;
wire   [4:0] add_ln246_1_fu_733_p2;
wire   [8:0] p_shl6_mid1_fu_792_p3;
wire   [12:0] p_shl_mid1_fu_785_p3;
wire   [12:0] p_shl6_cast_mid1_fu_799_p1;
wire   [7:0] tmp_s_fu_714_p3;
wire   [9:0] add_ln1169_1_mid_fu_816_p3;
wire   [9:0] add_ln1169_1_fu_726_p3;
wire   [9:0] add_ln1169_2_mid_fu_830_p3;
wire   [9:0] add_ln1169_2_fu_738_p3;
wire   [9:0] add_ln1169_3_mid_fu_844_p3;
wire   [9:0] add_ln1169_3_fu_745_p3;
wire   [9:0] add_ln1169_4_mid_fu_858_p3;
wire   [9:0] add_ln1169_4_fu_751_p3;
wire   [9:0] add_ln1169_5_mid_fu_872_p3;
wire   [9:0] add_ln1169_5_fu_758_p3;
wire   [9:0] add_ln1169_6_mid_fu_886_p3;
wire   [9:0] add_ln1169_6_fu_765_p3;
wire   [9:0] add_ln1169_7_mid_fu_900_p3;
wire   [9:0] add_ln1169_7_fu_771_p3;
wire   [9:0] add_ln1169_8_mid_fu_914_p3;
wire   [9:0] add_ln1169_8_fu_778_p3;
wire   [4:0] select_ln237_15_fu_928_p3;
wire   [4:0] select_ln237_16_fu_940_p3;
wire   [7:0] p_mid1_fu_952_p3;
wire   [7:0] select_ln237_4_fu_809_p3;
wire   [7:0] select_ln238_4_fu_959_p3;
wire   [4:0] add_ln246_3_fu_970_p2;
wire   [9:0] add_ln1169_1_mid1_fu_979_p3;
wire   [9:0] select_ln237_6_fu_823_p3;
wire   [9:0] select_ln238_6_fu_986_p3;
wire   [4:0] add_ln246_4_fu_998_p2;
wire   [9:0] add_ln1169_2_mid1_fu_1003_p3;
wire   [9:0] select_ln237_7_fu_837_p3;
wire   [9:0] select_ln238_7_fu_1010_p3;
wire   [9:0] add_ln1169_4_dup_fu_933_p3;
wire   [9:0] select_ln237_8_fu_851_p3;
wire   [9:0] select_ln238_8_fu_1022_p3;
wire   [9:0] add_ln1169_4_mid1_fu_1034_p3;
wire   [9:0] select_ln237_9_fu_865_p3;
wire   [9:0] select_ln238_9_fu_1042_p3;
wire   [9:0] add_ln1169_5_mid1_fu_1054_p3;
wire   [9:0] select_ln237_10_fu_879_p3;
wire   [9:0] select_ln238_10_fu_1062_p3;
wire   [9:0] add_ln1169_7_dup_fu_945_p3;
wire   [9:0] select_ln237_11_fu_893_p3;
wire   [9:0] select_ln238_11_fu_1074_p3;
wire   [9:0] add_ln1169_7_mid1_fu_1086_p3;
wire   [9:0] select_ln237_12_fu_907_p3;
wire   [9:0] select_ln238_12_fu_1094_p3;
wire   [9:0] add_ln1169_8_mid1_fu_1106_p3;
wire   [9:0] select_ln237_13_fu_921_p3;
wire   [9:0] select_ln238_13_fu_1114_p3;
wire   [12:0] p_mid141_fu_803_p2;
wire   [12:0] empty_fu_708_p2;
wire   [8:0] tmp_9_fu_1126_p4;
wire   [8:0] tmp_10_fu_1136_p4;
wire   [8:0] select_ln237_17_fu_1146_p3;
wire   [12:0] tmp1_fu_1153_p3;
wire   [12:0] zext_ln246_fu_966_p1;
wire   [5:0] p_shl7_fu_1173_p3;
wire   [5:0] oc_cast4_fu_1170_p1;
wire   [7:0] mul_ln1171_fu_1201_p0;
wire   [6:0] add_ln255_fu_1211_p2;
wire   [15:0] shl_ln737_s_fu_1225_p3;
wire  signed [16:0] sext_ln712_fu_1232_p1;
wire  signed [16:0] sext_ln1245_fu_1236_p1;
wire   [16:0] add_ln1245_fu_1239_p2;
wire   [9:0] trunc_ln_fu_1253_p4;
wire   [0:0] tmp_320_fu_1245_p3;
wire   [0:0] icmp_ln414_fu_1275_p2;
wire   [0:0] and_ln414_fu_1280_p2;
wire  signed [10:0] sext_ln403_fu_1263_p1;
wire   [10:0] zext_ln415_fu_1286_p1;
wire   [0:0] tmp_322_fu_1296_p3;
wire   [0:0] tmp_321_fu_1267_p3;
wire   [0:0] xor_ln795_fu_1304_p2;
wire   [0:0] xor_ln787_fu_1324_p2;
wire   [0:0] tmp_323_fu_1316_p3;
wire   [0:0] or_ln787_fu_1330_p2;
wire   [0:0] tmp_324_fu_1342_p3;
wire   [0:0] xor_ln789_fu_1350_p2;
wire   [0:0] or_ln789_fu_1356_p2;
wire   [0:0] and_ln416_fu_1310_p2;
wire   [0:0] xor_ln787_130_fu_1336_p2;
wire   [0:0] xor_ln794_fu_1374_p2;
wire   [0:0] or_ln794_fu_1380_p2;
wire   [0:0] xor_ln794_129_fu_1386_p2;
wire   [0:0] and_ln789_fu_1362_p2;
wire   [0:0] xor_ln795_130_fu_1398_p2;
wire   [0:0] and_ln790_fu_1368_p2;
wire   [0:0] or_ln795_fu_1404_p2;
wire   [0:0] xor_ln795_194_fu_1410_p2;
wire   [0:0] and_ln795_fu_1416_p2;
wire   [7:0] mul_ln1171_64_fu_1432_p0;
wire   [15:0] select_ln384_fu_1445_p3;
wire  signed [15:0] sext_ln755_fu_1442_p1;
wire   [15:0] select_ln340_fu_1452_p3;
wire  signed [22:0] shl_ln737_64_fu_1459_p3;
wire  signed [23:0] sext_ln712_64_fu_1467_p1;
wire  signed [23:0] sext_ln1245_65_fu_1471_p1;
wire  signed [22:0] sext_ln1245_66_fu_1474_p1;
wire   [22:0] add_ln709_fu_1483_p2;
wire   [0:0] icmp_ln414_64_fu_1515_p2;
wire   [0:0] and_ln414_64_fu_1520_p2;
wire   [15:0] trunc_ln717_s_fu_1497_p4;
wire   [15:0] zext_ln415_64_fu_1526_p1;
wire   [6:0] add_ln255_3_fu_1552_p2;
wire   [0:0] xor_ln795_131_fu_1565_p2;
wire   [0:0] xor_ln787_131_fu_1575_p2;
wire   [0:0] or_ln787_64_fu_1580_p2;
wire   [0:0] tmp_329_fu_1590_p3;
wire   [0:0] xor_ln789_64_fu_1597_p2;
wire   [0:0] or_ln789_64_fu_1603_p2;
wire   [0:0] and_ln416_64_fu_1570_p2;
wire   [0:0] xor_ln787_132_fu_1585_p2;
wire   [0:0] xor_ln794_130_fu_1619_p2;
wire   [0:0] or_ln794_64_fu_1625_p2;
wire   [0:0] xor_ln794_131_fu_1630_p2;
wire   [0:0] and_ln789_64_fu_1609_p2;
wire   [0:0] xor_ln795_132_fu_1641_p2;
wire   [0:0] and_ln790_64_fu_1614_p2;
wire   [0:0] or_ln795_64_fu_1647_p2;
wire   [0:0] xor_ln795_195_fu_1653_p2;
wire   [0:0] and_ln795_64_fu_1659_p2;
wire   [0:0] and_ln794_64_fu_1635_p2;
wire   [7:0] mul_ln1171_65_fu_1674_p0;
wire   [0:0] or_ln340_1_fu_1664_p2;
wire   [15:0] select_ln384_129_fu_1680_p3;
wire   [6:0] add_ln255_4_fu_1699_p2;
wire  signed [22:0] shl_ln737_65_fu_1712_p3;
wire  signed [23:0] sext_ln712_65_fu_1719_p1;
wire  signed [23:0] sext_ln1245_67_fu_1723_p1;
wire  signed [22:0] sext_ln1245_68_fu_1726_p1;
wire   [23:0] add_ln1245_66_fu_1729_p2;
wire   [22:0] add_ln709_63_fu_1735_p2;
wire   [0:0] icmp_ln414_65_fu_1767_p2;
wire   [0:0] and_ln414_65_fu_1772_p2;
wire   [15:0] trunc_ln717_63_fu_1749_p4;
wire   [15:0] zext_ln415_65_fu_1778_p1;
wire   [0:0] tmp_332_fu_1788_p3;
wire   [0:0] xor_ln787_133_fu_1810_p2;
wire   [0:0] or_ln787_65_fu_1816_p2;
wire   [0:0] tmp_334_fu_1828_p3;
wire   [0:0] xor_ln789_65_fu_1836_p2;
wire   [0:0] or_ln789_65_fu_1842_p2;
wire   [0:0] xor_ln787_134_fu_1822_p2;
wire   [0:0] xor_ln794_132_fu_1854_p2;
wire   [0:0] or_ln794_65_fu_1860_p2;
wire   [0:0] xor_ln794_133_fu_1866_p2;
wire   [0:0] and_ln789_65_fu_1848_p2;
wire   [0:0] xor_ln795_134_fu_1878_p2;
wire   [7:0] mul_ln1171_66_fu_1894_p0;
wire   [6:0] add_ln255_5_fu_1904_p2;
wire   [0:0] and_ln416_65_fu_1914_p2;
wire   [0:0] and_ln790_65_fu_1918_p2;
wire   [0:0] xor_ln795_196_fu_1923_p2;
wire   [0:0] and_ln795_65_fu_1928_p2;
wire   [0:0] or_ln340_2_fu_1933_p2;
wire   [15:0] select_ln384_130_fu_1938_p3;
wire   [15:0] select_ln340_2_fu_1945_p3;
wire  signed [22:0] shl_ln737_66_fu_1952_p3;
wire  signed [23:0] sext_ln712_66_fu_1960_p1;
wire  signed [23:0] sext_ln1245_69_fu_1964_p1;
wire  signed [22:0] sext_ln1245_70_fu_1967_p1;
wire   [22:0] add_ln709_64_fu_1976_p2;
wire   [0:0] icmp_ln414_66_fu_2008_p2;
wire   [0:0] and_ln414_66_fu_2013_p2;
wire   [15:0] trunc_ln717_64_fu_1990_p4;
wire   [15:0] zext_ln415_66_fu_2019_p1;
wire   [0:0] xor_ln795_135_fu_2048_p2;
wire   [0:0] xor_ln787_135_fu_2058_p2;
wire   [0:0] or_ln787_66_fu_2063_p2;
wire   [0:0] tmp_339_fu_2073_p3;
wire   [0:0] xor_ln789_66_fu_2080_p2;
wire   [0:0] or_ln789_66_fu_2086_p2;
wire   [0:0] and_ln416_66_fu_2053_p2;
wire   [0:0] xor_ln787_136_fu_2068_p2;
wire   [0:0] xor_ln794_134_fu_2102_p2;
wire   [0:0] or_ln794_66_fu_2108_p2;
wire   [0:0] xor_ln794_135_fu_2113_p2;
wire   [0:0] and_ln789_66_fu_2092_p2;
wire   [0:0] xor_ln795_136_fu_2124_p2;
wire   [0:0] and_ln790_66_fu_2097_p2;
wire   [0:0] or_ln795_66_fu_2130_p2;
wire   [0:0] xor_ln795_197_fu_2136_p2;
wire   [0:0] and_ln795_66_fu_2142_p2;
wire   [0:0] and_ln794_66_fu_2118_p2;
wire   [7:0] mul_ln1171_67_fu_2156_p0;
wire   [0:0] or_ln340_3_fu_2147_p2;
wire   [15:0] select_ln384_131_fu_2162_p3;
wire   [15:0] select_ln340_3_fu_2170_p3;
wire  signed [22:0] shl_ln737_67_fu_2177_p3;
wire  signed [15:0] mul_ln1171_67_fu_2156_p2;
wire  signed [23:0] sext_ln712_67_fu_2185_p1;
wire  signed [23:0] sext_ln1245_71_fu_2189_p1;
wire  signed [22:0] sext_ln1245_72_fu_2193_p1;
wire   [6:0] trunc_ln414_67_fu_2225_p1;
wire   [6:0] add_ln255_6_fu_2243_p2;
wire   [0:0] and_ln414_67_fu_2265_p2;
wire   [15:0] trunc_ln717_65_fu_2256_p4;
wire   [15:0] zext_ln415_67_fu_2269_p1;
wire   [15:0] add_ln415_67_fu_2273_p2;
wire   [0:0] tmp_342_fu_2279_p3;
wire   [0:0] xor_ln795_137_fu_2287_p2;
wire   [0:0] xor_ln787_137_fu_2298_p2;
wire   [0:0] or_ln787_67_fu_2303_p2;
wire   [0:0] tmp_344_fu_2314_p3;
wire   [0:0] xor_ln789_67_fu_2321_p2;
wire   [0:0] or_ln789_67_fu_2327_p2;
wire   [0:0] and_ln416_67_fu_2293_p2;
wire   [0:0] xor_ln787_138_fu_2309_p2;
wire   [0:0] xor_ln794_136_fu_2343_p2;
wire   [0:0] or_ln794_67_fu_2349_p2;
wire   [0:0] xor_ln794_137_fu_2355_p2;
wire   [0:0] and_ln789_67_fu_2333_p2;
wire   [0:0] xor_ln795_138_fu_2366_p2;
wire   [0:0] and_ln790_67_fu_2338_p2;
wire   [0:0] or_ln795_67_fu_2372_p2;
wire   [0:0] xor_ln795_198_fu_2378_p2;
wire   [0:0] and_ln795_67_fu_2384_p2;
wire   [0:0] and_ln794_67_fu_2360_p2;
wire   [7:0] mul_ln1171_68_fu_2399_p0;
wire   [0:0] or_ln340_4_fu_2389_p2;
wire   [15:0] select_ln384_132_fu_2405_p3;
wire   [6:0] add_ln255_7_fu_2425_p2;
wire  signed [22:0] shl_ln737_68_fu_2438_p3;
wire  signed [23:0] sext_ln712_68_fu_2445_p1;
wire  signed [23:0] sext_ln1245_73_fu_2449_p1;
wire  signed [22:0] sext_ln1245_74_fu_2452_p1;
wire   [23:0] add_ln1245_69_fu_2455_p2;
wire   [22:0] add_ln709_66_fu_2461_p2;
wire   [0:0] icmp_ln414_68_fu_2493_p2;
wire   [0:0] and_ln414_68_fu_2498_p2;
wire   [15:0] trunc_ln717_66_fu_2475_p4;
wire   [15:0] zext_ln415_68_fu_2504_p1;
wire   [0:0] tmp_347_fu_2514_p3;
wire   [0:0] xor_ln787_139_fu_2536_p2;
wire   [0:0] or_ln787_68_fu_2542_p2;
wire   [0:0] tmp_349_fu_2554_p3;
wire   [0:0] xor_ln789_68_fu_2562_p2;
wire   [0:0] or_ln789_68_fu_2568_p2;
wire   [0:0] xor_ln787_140_fu_2548_p2;
wire   [0:0] xor_ln794_138_fu_2580_p2;
wire   [0:0] or_ln794_68_fu_2586_p2;
wire   [0:0] xor_ln794_139_fu_2592_p2;
wire   [0:0] and_ln789_68_fu_2574_p2;
wire   [0:0] xor_ln795_140_fu_2604_p2;
wire   [7:0] mul_ln1171_69_fu_2620_p0;
wire   [6:0] add_ln255_8_fu_2630_p2;
wire   [0:0] and_ln416_68_fu_2640_p2;
wire   [0:0] and_ln790_68_fu_2644_p2;
wire   [0:0] xor_ln795_199_fu_2649_p2;
wire   [0:0] and_ln795_68_fu_2654_p2;
wire   [0:0] or_ln340_5_fu_2659_p2;
wire   [15:0] select_ln384_133_fu_2664_p3;
wire   [15:0] select_ln340_5_fu_2671_p3;
wire  signed [22:0] shl_ln737_69_fu_2678_p3;
wire  signed [23:0] sext_ln712_69_fu_2686_p1;
wire  signed [23:0] sext_ln1245_75_fu_2690_p1;
wire  signed [22:0] sext_ln1245_76_fu_2693_p1;
wire   [22:0] add_ln709_67_fu_2702_p2;
wire   [0:0] icmp_ln414_69_fu_2734_p2;
wire   [0:0] and_ln414_69_fu_2739_p2;
wire   [15:0] trunc_ln717_67_fu_2716_p4;
wire   [15:0] zext_ln415_69_fu_2745_p1;
wire   [6:0] add_ln255_9_fu_2771_p2;
wire   [0:0] xor_ln795_141_fu_2784_p2;
wire   [0:0] xor_ln787_141_fu_2794_p2;
wire   [0:0] or_ln787_69_fu_2799_p2;
wire   [0:0] tmp_354_fu_2809_p3;
wire   [0:0] xor_ln789_69_fu_2816_p2;
wire   [0:0] or_ln789_69_fu_2822_p2;
wire   [0:0] and_ln416_69_fu_2789_p2;
wire   [0:0] xor_ln787_142_fu_2804_p2;
wire   [0:0] xor_ln794_140_fu_2838_p2;
wire   [0:0] or_ln794_69_fu_2844_p2;
wire   [0:0] xor_ln794_141_fu_2849_p2;
wire   [0:0] and_ln789_69_fu_2828_p2;
wire   [0:0] xor_ln795_142_fu_2860_p2;
wire   [0:0] and_ln790_69_fu_2833_p2;
wire   [0:0] or_ln795_69_fu_2866_p2;
wire   [0:0] xor_ln795_200_fu_2872_p2;
wire   [0:0] and_ln795_69_fu_2878_p2;
wire   [0:0] and_ln794_69_fu_2854_p2;
wire   [7:0] mul_ln1171_70_fu_2892_p0;
wire   [0:0] or_ln340_6_fu_2883_p2;
wire   [15:0] select_ln384_134_fu_2898_p3;
wire   [15:0] select_ln340_6_fu_2906_p3;
wire  signed [22:0] shl_ln737_70_fu_2913_p3;
wire  signed [15:0] mul_ln1171_70_fu_2892_p2;
wire  signed [23:0] sext_ln712_70_fu_2921_p1;
wire  signed [23:0] sext_ln1245_77_fu_2925_p1;
wire  signed [22:0] sext_ln1245_78_fu_2929_p1;
wire   [6:0] trunc_ln414_70_fu_2961_p1;
wire   [0:0] and_ln414_70_fu_2991_p2;
wire   [15:0] trunc_ln717_68_fu_2982_p4;
wire   [15:0] zext_ln415_70_fu_2995_p1;
wire   [15:0] add_ln415_70_fu_2999_p2;
wire   [0:0] tmp_357_fu_3005_p3;
wire   [0:0] xor_ln795_143_fu_3013_p2;
wire   [0:0] xor_ln787_143_fu_3024_p2;
wire   [0:0] or_ln787_70_fu_3029_p2;
wire   [0:0] tmp_359_fu_3040_p3;
wire   [0:0] xor_ln789_70_fu_3047_p2;
wire   [0:0] or_ln789_70_fu_3053_p2;
wire   [0:0] and_ln416_70_fu_3019_p2;
wire   [0:0] xor_ln787_144_fu_3035_p2;
wire   [0:0] xor_ln794_142_fu_3069_p2;
wire   [0:0] or_ln794_70_fu_3075_p2;
wire   [0:0] xor_ln794_143_fu_3081_p2;
wire   [0:0] and_ln789_70_fu_3059_p2;
wire   [0:0] xor_ln795_144_fu_3092_p2;
wire   [0:0] and_ln790_70_fu_3064_p2;
wire   [0:0] or_ln795_70_fu_3098_p2;
wire   [0:0] xor_ln795_201_fu_3104_p2;
wire   [0:0] and_ln795_70_fu_3110_p2;
wire   [0:0] and_ln794_70_fu_3086_p2;
wire   [7:0] mul_ln1171_71_fu_3124_p0;
wire   [0:0] or_ln340_7_fu_3115_p2;
wire   [15:0] select_ln384_135_fu_3130_p3;
wire   [6:0] trunc_ln414_71_fu_3146_p1;
wire  signed [22:0] shl_ln737_71_fu_3156_p3;
wire  signed [23:0] sext_ln712_71_fu_3163_p1;
wire  signed [23:0] sext_ln1245_79_fu_3167_p1;
wire  signed [22:0] sext_ln1245_80_fu_3170_p1;
wire   [23:0] add_ln1245_72_fu_3173_p2;
wire   [22:0] add_ln709_69_fu_3179_p2;
wire   [0:0] and_ln414_71_fu_3211_p2;
wire   [15:0] trunc_ln717_69_fu_3193_p4;
wire   [15:0] zext_ln415_71_fu_3216_p1;
wire   [0:0] tmp_362_fu_3226_p3;
wire   [0:0] xor_ln787_145_fu_3248_p2;
wire   [0:0] or_ln787_71_fu_3254_p2;
wire   [0:0] tmp_364_fu_3266_p3;
wire   [0:0] xor_ln789_71_fu_3274_p2;
wire   [0:0] or_ln789_71_fu_3280_p2;
wire   [0:0] xor_ln787_146_fu_3260_p2;
wire   [0:0] xor_ln794_144_fu_3292_p2;
wire   [0:0] or_ln794_71_fu_3298_p2;
wire   [0:0] xor_ln794_145_fu_3304_p2;
wire   [0:0] and_ln789_71_fu_3286_p2;
wire   [0:0] xor_ln795_146_fu_3316_p2;
wire   [0:0] and_ln416_71_fu_3332_p2;
wire   [0:0] and_ln790_71_fu_3336_p2;
wire   [0:0] xor_ln795_202_fu_3341_p2;
wire   [0:0] and_ln795_71_fu_3346_p2;
wire   [0:0] or_ln340_8_fu_3351_p2;
wire   [15:0] select_ln384_136_fu_3356_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [15:0] mul_ln1171_64_fu_1432_p00;
wire   [15:0] mul_ln1171_65_fu_1674_p00;
wire   [15:0] mul_ln1171_66_fu_1894_p00;
wire   [15:0] mul_ln1171_67_fu_2156_p00;
wire   [15:0] mul_ln1171_68_fu_2399_p00;
wire   [15:0] mul_ln1171_69_fu_2620_p00;
wire   [15:0] mul_ln1171_70_fu_2892_p00;
wire   [15:0] mul_ln1171_71_fu_3124_p00;
wire   [15:0] mul_ln1171_fu_1201_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mydataset_lane_Conv_ap_fixed_16_8_6_0_0_ap_fixed_16_8_6_0_0_ap_fixed_8_1_6_0_0_const_ap_fixebkb #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
layers_0_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layers_0_bias_V_address0),
    .ce0(layers_0_bias_V_ce0),
    .q0(layers_0_bias_V_q0)
);

mydataset_lane_Conv_ap_fixed_16_8_6_0_0_ap_fixed_16_8_6_0_0_ap_fixed_8_1_6_0_0_const_ap_fixecud #(
    .DataWidth( 8 ),
    .AddressRange( 72 ),
    .AddressWidth( 7 ))
layers_0_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layers_0_weight_V_address0),
    .ce0(layers_0_weight_V_ce0),
    .q0(layers_0_weight_V_q0),
    .address1(layers_0_weight_V_address1),
    .ce1(layers_0_weight_V_ce1),
    .q1(layers_0_weight_V_q1),
    .address2(layers_0_weight_V_address2),
    .ce2(layers_0_weight_V_ce2),
    .q2(layers_0_weight_V_q2),
    .address3(layers_0_weight_V_address3),
    .ce3(layers_0_weight_V_ce3),
    .q3(layers_0_weight_V_q3),
    .address4(layers_0_weight_V_address4),
    .ce4(layers_0_weight_V_ce4),
    .q4(layers_0_weight_V_q4),
    .address5(layers_0_weight_V_address5),
    .ce5(layers_0_weight_V_ce5),
    .q5(layers_0_weight_V_q5),
    .address6(layers_0_weight_V_address6),
    .ce6(layers_0_weight_V_ce6),
    .q6(layers_0_weight_V_q6),
    .address7(layers_0_weight_V_address7),
    .ce7(layers_0_weight_V_ce7),
    .q7(layers_0_weight_V_q7),
    .address8(layers_0_weight_V_address8),
    .ce8(layers_0_weight_V_ce8),
    .q8(layers_0_weight_V_q8)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U3(
    .din0(mul_ln1171_fu_1201_p0),
    .din1(layers_0_weight_V_q8),
    .dout(mul_ln1171_fu_1201_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U4(
    .din0(mul_ln1171_64_fu_1432_p0),
    .din1(layers_0_weight_V_q7),
    .dout(mul_ln1171_64_fu_1432_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U5(
    .din0(mul_ln1171_65_fu_1674_p0),
    .din1(layers_0_weight_V_q6),
    .dout(mul_ln1171_65_fu_1674_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U6(
    .din0(mul_ln1171_66_fu_1894_p0),
    .din1(layers_0_weight_V_q5),
    .dout(mul_ln1171_66_fu_1894_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U7(
    .din0(mul_ln1171_67_fu_2156_p0),
    .din1(layers_0_weight_V_load_4_reg_3854),
    .dout(mul_ln1171_67_fu_2156_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U8(
    .din0(mul_ln1171_68_fu_2399_p0),
    .din1(layers_0_weight_V_q3),
    .dout(mul_ln1171_68_fu_2399_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U9(
    .din0(mul_ln1171_69_fu_2620_p0),
    .din1(layers_0_weight_V_q2),
    .dout(mul_ln1171_69_fu_2620_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U10(
    .din0(mul_ln1171_70_fu_2892_p0),
    .din1(layers_0_weight_V_load_7_reg_4008),
    .dout(mul_ln1171_70_fu_2892_p2)
);

mydataset_lane_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U11(
    .din0(mul_ln1171_71_fu_3124_p0),
    .din1(layers_0_weight_V_load_8_reg_4053),
    .dout(mul_ln1171_71_fu_3124_p2)
);

mydataset_lane_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            h_fu_156 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln237_reg_3406 == 1'd0))) begin
            h_fu_156 <= select_ln237_14_fu_615_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln237_fu_436_p2 == 1'd0))) begin
            indvar_flatten147_fu_160 <= add_ln237_fu_442_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten147_fu_160 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln237_fu_436_p2 == 1'd0))) begin
            indvar_flatten_fu_152 <= select_ln238_15_fu_463_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_152 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            oc_fu_144 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln237_reg_3406 == 1'd0))) begin
            oc_fu_144 <= add_ln239_fu_669_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w_fu_148 <= 5'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln237_reg_3406 == 1'd0))) begin
            w_fu_148 <= select_ln238_14_fu_657_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln1245_65_reg_3704 <= add_ln1245_65_fu_1477_p2;
        add_ln1245_67_reg_3818 <= add_ln1245_67_fu_1970_p2;
        add_ln1245_68_reg_3859 <= add_ln1245_68_fu_2197_p2;
        add_ln1245_70_reg_3972 <= add_ln1245_70_fu_2696_p2;
        add_ln1245_71_reg_4018 <= add_ln1245_71_fu_2933_p2;
        add_ln240_reg_3582_pp0_iter10_reg <= add_ln240_reg_3582_pp0_iter9_reg;
        add_ln240_reg_3582_pp0_iter11_reg <= add_ln240_reg_3582_pp0_iter10_reg;
        add_ln240_reg_3582_pp0_iter12_reg <= add_ln240_reg_3582_pp0_iter11_reg;
        add_ln240_reg_3582_pp0_iter13_reg <= add_ln240_reg_3582_pp0_iter12_reg;
        add_ln240_reg_3582_pp0_iter14_reg <= add_ln240_reg_3582_pp0_iter13_reg;
        add_ln240_reg_3582_pp0_iter15_reg <= add_ln240_reg_3582_pp0_iter14_reg;
        add_ln240_reg_3582_pp0_iter16_reg <= add_ln240_reg_3582_pp0_iter15_reg;
        add_ln240_reg_3582_pp0_iter3_reg <= add_ln240_reg_3582;
        add_ln240_reg_3582_pp0_iter4_reg <= add_ln240_reg_3582_pp0_iter3_reg;
        add_ln240_reg_3582_pp0_iter5_reg <= add_ln240_reg_3582_pp0_iter4_reg;
        add_ln240_reg_3582_pp0_iter6_reg <= add_ln240_reg_3582_pp0_iter5_reg;
        add_ln240_reg_3582_pp0_iter7_reg <= add_ln240_reg_3582_pp0_iter6_reg;
        add_ln240_reg_3582_pp0_iter8_reg <= add_ln240_reg_3582_pp0_iter7_reg;
        add_ln240_reg_3582_pp0_iter9_reg <= add_ln240_reg_3582_pp0_iter8_reg;
        add_ln415_64_reg_3721 <= add_ln415_64_fu_1530_p2;
        add_ln415_65_reg_3776 <= add_ln415_65_fu_1782_p2;
        add_ln415_66_reg_3835 <= add_ln415_66_fu_2023_p2;
        add_ln415_68_reg_3930 <= add_ln415_68_fu_2508_p2;
        add_ln415_69_reg_3989 <= add_ln415_69_fu_2749_p2;
        add_ln415_71_reg_4084 <= add_ln415_71_fu_3220_p2;
        add_ln415_reg_3678 <= add_ln415_fu_1290_p2;
        add_ln709_65_reg_3864 <= add_ln709_65_fu_2203_p2;
        add_ln709_68_reg_4023 <= add_ln709_68_fu_2939_p2;
        and_ln794_65_reg_3791 <= and_ln794_65_fu_1872_p2;
        and_ln794_68_reg_3945 <= and_ln794_68_fu_2598_p2;
        and_ln794_71_reg_4099 <= and_ln794_71_fu_3310_p2;
        and_ln794_reg_3683 <= and_ln794_fu_1392_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_190_reg_3532_pp0_iter2_reg <= empty_190_reg_3532;
        empty_191_reg_3637 <= empty_191_fu_1180_p2;
        icmp_ln414_67_reg_3882 <= icmp_ln414_67_fu_2229_p2;
        icmp_ln414_70_reg_4041 <= icmp_ln414_70_fu_2965_p2;
        icmp_ln414_71_reg_4069 <= icmp_ln414_71_fu_3150_p2;
        in_load_1_reg_3592_pp0_iter4_reg <= in_load_1_reg_3592;
        in_load_2_reg_3597_pp0_iter4_reg <= in_load_2_reg_3597;
        in_load_2_reg_3597_pp0_iter5_reg <= in_load_2_reg_3597_pp0_iter4_reg;
        in_load_2_reg_3597_pp0_iter6_reg <= in_load_2_reg_3597_pp0_iter5_reg;
        in_load_3_reg_3602_pp0_iter4_reg <= in_load_3_reg_3602;
        in_load_3_reg_3602_pp0_iter5_reg <= in_load_3_reg_3602_pp0_iter4_reg;
        in_load_3_reg_3602_pp0_iter6_reg <= in_load_3_reg_3602_pp0_iter5_reg;
        in_load_3_reg_3602_pp0_iter7_reg <= in_load_3_reg_3602_pp0_iter6_reg;
        in_load_4_reg_3607_pp0_iter4_reg <= in_load_4_reg_3607;
        in_load_4_reg_3607_pp0_iter5_reg <= in_load_4_reg_3607_pp0_iter4_reg;
        in_load_4_reg_3607_pp0_iter6_reg <= in_load_4_reg_3607_pp0_iter5_reg;
        in_load_4_reg_3607_pp0_iter7_reg <= in_load_4_reg_3607_pp0_iter6_reg;
        in_load_4_reg_3607_pp0_iter8_reg <= in_load_4_reg_3607_pp0_iter7_reg;
        in_load_4_reg_3607_pp0_iter9_reg <= in_load_4_reg_3607_pp0_iter8_reg;
        in_load_5_reg_3612_pp0_iter10_reg <= in_load_5_reg_3612_pp0_iter9_reg;
        in_load_5_reg_3612_pp0_iter4_reg <= in_load_5_reg_3612;
        in_load_5_reg_3612_pp0_iter5_reg <= in_load_5_reg_3612_pp0_iter4_reg;
        in_load_5_reg_3612_pp0_iter6_reg <= in_load_5_reg_3612_pp0_iter5_reg;
        in_load_5_reg_3612_pp0_iter7_reg <= in_load_5_reg_3612_pp0_iter6_reg;
        in_load_5_reg_3612_pp0_iter8_reg <= in_load_5_reg_3612_pp0_iter7_reg;
        in_load_5_reg_3612_pp0_iter9_reg <= in_load_5_reg_3612_pp0_iter8_reg;
        in_load_6_reg_3617_pp0_iter10_reg <= in_load_6_reg_3617_pp0_iter9_reg;
        in_load_6_reg_3617_pp0_iter11_reg <= in_load_6_reg_3617_pp0_iter10_reg;
        in_load_6_reg_3617_pp0_iter4_reg <= in_load_6_reg_3617;
        in_load_6_reg_3617_pp0_iter5_reg <= in_load_6_reg_3617_pp0_iter4_reg;
        in_load_6_reg_3617_pp0_iter6_reg <= in_load_6_reg_3617_pp0_iter5_reg;
        in_load_6_reg_3617_pp0_iter7_reg <= in_load_6_reg_3617_pp0_iter6_reg;
        in_load_6_reg_3617_pp0_iter8_reg <= in_load_6_reg_3617_pp0_iter7_reg;
        in_load_6_reg_3617_pp0_iter9_reg <= in_load_6_reg_3617_pp0_iter8_reg;
        in_load_7_reg_3622_pp0_iter10_reg <= in_load_7_reg_3622_pp0_iter9_reg;
        in_load_7_reg_3622_pp0_iter11_reg <= in_load_7_reg_3622_pp0_iter10_reg;
        in_load_7_reg_3622_pp0_iter12_reg <= in_load_7_reg_3622_pp0_iter11_reg;
        in_load_7_reg_3622_pp0_iter13_reg <= in_load_7_reg_3622_pp0_iter12_reg;
        in_load_7_reg_3622_pp0_iter4_reg <= in_load_7_reg_3622;
        in_load_7_reg_3622_pp0_iter5_reg <= in_load_7_reg_3622_pp0_iter4_reg;
        in_load_7_reg_3622_pp0_iter6_reg <= in_load_7_reg_3622_pp0_iter5_reg;
        in_load_7_reg_3622_pp0_iter7_reg <= in_load_7_reg_3622_pp0_iter6_reg;
        in_load_7_reg_3622_pp0_iter8_reg <= in_load_7_reg_3622_pp0_iter7_reg;
        in_load_7_reg_3622_pp0_iter9_reg <= in_load_7_reg_3622_pp0_iter8_reg;
        in_load_8_reg_3627_pp0_iter10_reg <= in_load_8_reg_3627_pp0_iter9_reg;
        in_load_8_reg_3627_pp0_iter11_reg <= in_load_8_reg_3627_pp0_iter10_reg;
        in_load_8_reg_3627_pp0_iter12_reg <= in_load_8_reg_3627_pp0_iter11_reg;
        in_load_8_reg_3627_pp0_iter13_reg <= in_load_8_reg_3627_pp0_iter12_reg;
        in_load_8_reg_3627_pp0_iter14_reg <= in_load_8_reg_3627_pp0_iter13_reg;
        in_load_8_reg_3627_pp0_iter4_reg <= in_load_8_reg_3627;
        in_load_8_reg_3627_pp0_iter5_reg <= in_load_8_reg_3627_pp0_iter4_reg;
        in_load_8_reg_3627_pp0_iter6_reg <= in_load_8_reg_3627_pp0_iter5_reg;
        in_load_8_reg_3627_pp0_iter7_reg <= in_load_8_reg_3627_pp0_iter6_reg;
        in_load_8_reg_3627_pp0_iter8_reg <= in_load_8_reg_3627_pp0_iter7_reg;
        in_load_8_reg_3627_pp0_iter9_reg <= in_load_8_reg_3627_pp0_iter8_reg;
        layers_0_bias_V_load_reg_3647 <= layers_0_bias_V_q0;
        mul_ln1171_64_reg_3693 <= mul_ln1171_64_fu_1432_p2;
        mul_ln1171_65_reg_3745 <= mul_ln1171_65_fu_1674_p2;
        mul_ln1171_66_reg_3802 <= mul_ln1171_66_fu_1894_p2;
        mul_ln1171_68_reg_3899 <= mul_ln1171_68_fu_2399_p2;
        mul_ln1171_69_reg_3956 <= mul_ln1171_69_fu_2620_p2;
        mul_ln1171_71_reg_4058 <= mul_ln1171_71_fu_3124_p2;
        mul_ln1171_reg_3663 <= mul_ln1171_fu_1201_p2;
        or_ln340_reg_3688 <= or_ln340_fu_1422_p2;
        or_ln795_65_reg_3797 <= or_ln795_65_fu_1884_p2;
        or_ln795_68_reg_3951 <= or_ln795_68_fu_2610_p2;
        or_ln795_71_reg_4105 <= or_ln795_71_fu_3322_p2;
        select_ln238_reg_3520_pp0_iter2_reg <= select_ln238_reg_3520;
        select_ln340_1_reg_3751 <= select_ln340_1_fu_1688_p3;
        select_ln340_4_reg_3905 <= select_ln340_4_fu_2413_p3;
        select_ln340_7_reg_4064 <= select_ln340_7_fu_3138_p3;
        tmp_325_reg_3709 <= add_ln1245_65_fu_1477_p2[32'd23];
        tmp_326_reg_3715 <= add_ln709_fu_1483_p2[32'd22];
        tmp_327_reg_3726 <= add_ln415_64_fu_1530_p2[32'd15];
        tmp_328_reg_3733 <= add_ln1245_65_fu_1477_p2[32'd23];
        tmp_330_reg_3766 <= add_ln1245_66_fu_1729_p2[32'd23];
        tmp_331_reg_3771 <= add_ln709_63_fu_1735_p2[32'd22];
        tmp_333_reg_3786 <= add_ln1245_66_fu_1729_p2[32'd23];
        tmp_335_reg_3823 <= add_ln1245_67_fu_1970_p2[32'd23];
        tmp_336_reg_3829 <= add_ln709_64_fu_1976_p2[32'd22];
        tmp_337_reg_3840 <= add_ln415_66_fu_2023_p2[32'd15];
        tmp_338_reg_3847 <= add_ln1245_67_fu_1970_p2[32'd23];
        tmp_340_reg_3869 <= add_ln1245_68_fu_2197_p2[32'd23];
        tmp_341_reg_3876 <= add_ln709_65_fu_2203_p2[32'd22];
        tmp_343_reg_3887 <= add_ln1245_68_fu_2197_p2[32'd23];
        tmp_345_reg_3920 <= add_ln1245_69_fu_2455_p2[32'd23];
        tmp_346_reg_3925 <= add_ln709_66_fu_2461_p2[32'd22];
        tmp_348_reg_3940 <= add_ln1245_69_fu_2455_p2[32'd23];
        tmp_350_reg_3977 <= add_ln1245_70_fu_2696_p2[32'd23];
        tmp_351_reg_3983 <= add_ln709_67_fu_2702_p2[32'd22];
        tmp_352_reg_3994 <= add_ln415_69_fu_2749_p2[32'd15];
        tmp_353_reg_4001 <= add_ln1245_70_fu_2696_p2[32'd23];
        tmp_355_reg_4028 <= add_ln1245_71_fu_2933_p2[32'd23];
        tmp_356_reg_4035 <= add_ln709_68_fu_2939_p2[32'd22];
        tmp_358_reg_4046 <= add_ln1245_71_fu_2933_p2[32'd23];
        tmp_360_reg_4074 <= add_ln1245_72_fu_3173_p2[32'd23];
        tmp_361_reg_4079 <= add_ln709_69_fu_3179_p2[32'd22];
        tmp_363_reg_4094 <= add_ln1245_72_fu_3173_p2[32'd23];
        trunc_ln414_64_reg_3699 <= trunc_ln414_64_fu_1438_p1;
        trunc_ln414_65_reg_3756 <= trunc_ln414_65_fu_1695_p1;
        trunc_ln414_66_reg_3808 <= trunc_ln414_66_fu_1900_p1;
        trunc_ln414_68_reg_3910 <= trunc_ln414_68_fu_2421_p1;
        trunc_ln414_69_reg_3962 <= trunc_ln414_69_fu_2626_p1;
        trunc_ln414_reg_3668 <= trunc_ln414_fu_1207_p1;
        xor_ln795_133_reg_3781 <= xor_ln795_133_fu_1796_p2;
        xor_ln795_139_reg_3935 <= xor_ln795_139_fu_2522_p2;
        xor_ln795_145_reg_4089 <= xor_ln795_145_fu_3234_p2;
        zext_ln1171_64_reg_3652[5 : 0] <= zext_ln1171_64_fu_1194_p1[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter10_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter9_reg[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter11_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter10_reg[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter12_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter11_reg[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter5_reg[5 : 0] <= zext_ln1171_64_reg_3652[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter6_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter5_reg[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter7_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter6_reg[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter8_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter7_reg[5 : 0];
        zext_ln1171_64_reg_3652_pp0_iter9_reg[5 : 0] <= zext_ln1171_64_reg_3652_pp0_iter8_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln237_reg_3406_pp0_iter1_reg == 1'd0))) begin
        add_ln240_reg_3582 <= add_ln240_fu_1160_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln237_reg_3406 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln246_2_reg_3513 <= add_ln246_2_fu_622_p2;
        and_ln237_reg_3494 <= and_ln237_fu_609_p2;
        empty_189_reg_3470 <= empty_189_fu_545_p2;
        empty_190_reg_3532 <= empty_190_fu_665_p1;
        select_ln237_14_reg_3507 <= select_ln237_14_fu_615_p3;
        select_ln237_reg_3464 <= select_ln237_fu_538_p3;
        select_ln238_5_reg_3527 <= select_ln238_5_fu_649_p3;
        select_ln238_reg_3520 <= select_ln238_fu_641_p3;
        tmp_202_mid_reg_3478 <= {{p_mid147_fu_559_p2[9:5]}};
        tmp_205_mid_reg_3486 <= {{p_mid149_fu_565_p2[9:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        h_4_reg_3440 <= h_fu_156;
        icmp_ln237_reg_3406 <= icmp_ln237_fu_436_p2;
        icmp_ln237_reg_3406_pp0_iter1_reg <= icmp_ln237_reg_3406;
        icmp_ln238_reg_3410_pp0_iter1_reg <= icmp_ln238_reg_3410;
        tmp_7_reg_3448 <= {{empty_186_fu_495_p2[9:5]}};
        tmp_8_reg_3456 <= {{empty_187_fu_501_p2[9:5]}};
        w_6_reg_3431 <= w_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln237_fu_436_p2 == 1'd0))) begin
        icmp_ln238_reg_3410 <= icmp_ln238_fu_451_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_load_1_reg_3592 <= in_r_q7;
        in_load_2_reg_3597 <= in_r_q6;
        in_load_3_reg_3602 <= in_r_q5;
        in_load_4_reg_3607 <= in_r_q4;
        in_load_5_reg_3612 <= in_r_q3;
        in_load_6_reg_3617 <= in_r_q2;
        in_load_7_reg_3622 <= in_r_q1;
        in_load_8_reg_3627 <= in_r_q0;
        in_load_reg_3587 <= in_r_q8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        layers_0_weight_V_load_4_reg_3854 <= layers_0_weight_V_q4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        layers_0_weight_V_load_7_reg_4008 <= layers_0_weight_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter14 == 1'b1))) begin
        layers_0_weight_V_load_8_reg_4053 <= layers_0_weight_V_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln237_fu_436_p2 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln237_reg_3406_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter16_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten147_load = 13'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten147_load = indvar_flatten147_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce0 = 1'b1;
    end else begin
        in_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce1 = 1'b1;
    end else begin
        in_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce2 = 1'b1;
    end else begin
        in_r_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce3 = 1'b1;
    end else begin
        in_r_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce4 = 1'b1;
    end else begin
        in_r_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce5 = 1'b1;
    end else begin
        in_r_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce6 = 1'b1;
    end else begin
        in_r_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce7 = 1'b1;
    end else begin
        in_r_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        in_r_ce8 = 1'b1;
    end else begin
        in_r_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layers_0_bias_V_ce0 = 1'b1;
    end else begin
        layers_0_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        layers_0_weight_V_ce0 = 1'b1;
    end else begin
        layers_0_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter12 == 1'b1))) begin
        layers_0_weight_V_ce1 = 1'b1;
    end else begin
        layers_0_weight_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        layers_0_weight_V_ce2 = 1'b1;
    end else begin
        layers_0_weight_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        layers_0_weight_V_ce3 = 1'b1;
    end else begin
        layers_0_weight_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        layers_0_weight_V_ce4 = 1'b1;
    end else begin
        layers_0_weight_V_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        layers_0_weight_V_ce5 = 1'b1;
    end else begin
        layers_0_weight_V_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        layers_0_weight_V_ce6 = 1'b1;
    end else begin
        layers_0_weight_V_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        layers_0_weight_V_ce7 = 1'b1;
    end else begin
        layers_0_weight_V_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layers_0_weight_V_ce8 = 1'b1;
    end else begin
        layers_0_weight_V_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter17 == 1'b1))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1169_1_dup_fu_628_p3 = {{select_ln237_14_fu_615_p3}, {add_ln246_2_fu_622_p2}};

assign add_ln1169_1_fu_726_p3 = {{h_4_reg_3440}, {add_ln246_fu_721_p2}};

assign add_ln1169_1_mid1_fu_979_p3 = {{select_ln237_14_reg_3507}, {add_ln246_3_fu_970_p2}};

assign add_ln1169_1_mid_fu_816_p3 = {{empty_189_reg_3470}, {5'd1}};

assign add_ln1169_2_fu_738_p3 = {{h_4_reg_3440}, {add_ln246_1_fu_733_p2}};

assign add_ln1169_2_mid1_fu_1003_p3 = {{select_ln237_14_reg_3507}, {add_ln246_4_fu_998_p2}};

assign add_ln1169_2_mid_fu_830_p3 = {{empty_189_reg_3470}, {5'd2}};

assign add_ln1169_3_fu_745_p3 = {{tmp_7_reg_3448}, {w_6_reg_3431}};

assign add_ln1169_3_mid_fu_844_p3 = {{tmp_202_mid_reg_3478}, {5'd0}};

assign add_ln1169_4_dup_fu_933_p3 = {{select_ln237_15_fu_928_p3}, {add_ln246_2_reg_3513}};

assign add_ln1169_4_fu_751_p3 = {{tmp_7_reg_3448}, {add_ln246_fu_721_p2}};

assign add_ln1169_4_mid1_fu_1034_p3 = {{select_ln237_15_fu_928_p3}, {add_ln246_3_fu_970_p2}};

assign add_ln1169_4_mid_fu_858_p3 = {{tmp_202_mid_reg_3478}, {5'd1}};

assign add_ln1169_5_fu_758_p3 = {{tmp_7_reg_3448}, {add_ln246_1_fu_733_p2}};

assign add_ln1169_5_mid1_fu_1054_p3 = {{select_ln237_15_fu_928_p3}, {add_ln246_4_fu_998_p2}};

assign add_ln1169_5_mid_fu_872_p3 = {{tmp_202_mid_reg_3478}, {5'd2}};

assign add_ln1169_6_fu_765_p3 = {{tmp_8_reg_3456}, {w_6_reg_3431}};

assign add_ln1169_6_mid_fu_886_p3 = {{tmp_205_mid_reg_3486}, {5'd0}};

assign add_ln1169_7_dup_fu_945_p3 = {{select_ln237_16_fu_940_p3}, {add_ln246_2_reg_3513}};

assign add_ln1169_7_fu_771_p3 = {{tmp_8_reg_3456}, {add_ln246_fu_721_p2}};

assign add_ln1169_7_mid1_fu_1086_p3 = {{select_ln237_16_fu_940_p3}, {add_ln246_3_fu_970_p2}};

assign add_ln1169_7_mid_fu_900_p3 = {{tmp_205_mid_reg_3486}, {5'd1}};

assign add_ln1169_8_fu_778_p3 = {{tmp_8_reg_3456}, {add_ln246_1_fu_733_p2}};

assign add_ln1169_8_mid1_fu_1106_p3 = {{select_ln237_16_fu_940_p3}, {add_ln246_4_fu_998_p2}};

assign add_ln1169_8_mid_fu_914_p3 = {{tmp_205_mid_reg_3486}, {5'd2}};

assign add_ln1245_65_fu_1477_p2 = ($signed(sext_ln712_64_fu_1467_p1) + $signed(sext_ln1245_65_fu_1471_p1));

assign add_ln1245_66_fu_1729_p2 = ($signed(sext_ln712_65_fu_1719_p1) + $signed(sext_ln1245_67_fu_1723_p1));

assign add_ln1245_67_fu_1970_p2 = ($signed(sext_ln712_66_fu_1960_p1) + $signed(sext_ln1245_69_fu_1964_p1));

assign add_ln1245_68_fu_2197_p2 = ($signed(sext_ln712_67_fu_2185_p1) + $signed(sext_ln1245_71_fu_2189_p1));

assign add_ln1245_69_fu_2455_p2 = ($signed(sext_ln712_68_fu_2445_p1) + $signed(sext_ln1245_73_fu_2449_p1));

assign add_ln1245_70_fu_2696_p2 = ($signed(sext_ln712_69_fu_2686_p1) + $signed(sext_ln1245_75_fu_2690_p1));

assign add_ln1245_71_fu_2933_p2 = ($signed(sext_ln712_70_fu_2921_p1) + $signed(sext_ln1245_77_fu_2925_p1));

assign add_ln1245_72_fu_3173_p2 = ($signed(sext_ln712_71_fu_3163_p1) + $signed(sext_ln1245_79_fu_3167_p1));

assign add_ln1245_fu_1239_p2 = ($signed(sext_ln712_fu_1232_p1) + $signed(sext_ln1245_fu_1236_p1));

assign add_ln237_fu_442_p2 = (ap_sig_allocacmp_indvar_flatten147_load + 13'd1);

assign add_ln238_fu_457_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln239_fu_669_p2 = (select_ln238_fu_641_p3 + 4'd1);

assign add_ln240_fu_1160_p2 = (tmp1_fu_1153_p3 + zext_ln246_fu_966_p1);

assign add_ln246_1_fu_733_p2 = (w_6_reg_3431 + 5'd2);

assign add_ln246_2_fu_622_p2 = (select_ln237_fu_538_p3 + 5'd1);

assign add_ln246_3_fu_970_p2 = (select_ln237_reg_3464 + 5'd2);

assign add_ln246_4_fu_998_p2 = (select_ln237_reg_3464 + 5'd3);

assign add_ln246_fu_721_p2 = (w_6_reg_3431 + 5'd1);

assign add_ln255_3_fu_1552_p2 = (zext_ln1171_64_reg_3652_pp0_iter5_reg + 7'd2);

assign add_ln255_4_fu_1699_p2 = (zext_ln1171_64_reg_3652_pp0_iter6_reg + 7'd3);

assign add_ln255_5_fu_1904_p2 = (zext_ln1171_64_reg_3652_pp0_iter7_reg + 7'd4);

assign add_ln255_6_fu_2243_p2 = (zext_ln1171_64_reg_3652_pp0_iter9_reg + 7'd5);

assign add_ln255_7_fu_2425_p2 = (zext_ln1171_64_reg_3652_pp0_iter10_reg + 7'd6);

assign add_ln255_8_fu_2630_p2 = (zext_ln1171_64_reg_3652_pp0_iter11_reg + 7'd7);

assign add_ln255_9_fu_2771_p2 = (zext_ln1171_64_reg_3652_pp0_iter12_reg + 7'd8);

assign add_ln255_fu_1211_p2 = (zext_ln1171_64_fu_1194_p1 + 7'd1);

assign add_ln415_64_fu_1530_p2 = (trunc_ln717_s_fu_1497_p4 + zext_ln415_64_fu_1526_p1);

assign add_ln415_65_fu_1782_p2 = (trunc_ln717_63_fu_1749_p4 + zext_ln415_65_fu_1778_p1);

assign add_ln415_66_fu_2023_p2 = (trunc_ln717_64_fu_1990_p4 + zext_ln415_66_fu_2019_p1);

assign add_ln415_67_fu_2273_p2 = (trunc_ln717_65_fu_2256_p4 + zext_ln415_67_fu_2269_p1);

assign add_ln415_68_fu_2508_p2 = (trunc_ln717_66_fu_2475_p4 + zext_ln415_68_fu_2504_p1);

assign add_ln415_69_fu_2749_p2 = (trunc_ln717_67_fu_2716_p4 + zext_ln415_69_fu_2745_p1);

assign add_ln415_70_fu_2999_p2 = (trunc_ln717_68_fu_2982_p4 + zext_ln415_70_fu_2995_p1);

assign add_ln415_71_fu_3220_p2 = (trunc_ln717_69_fu_3193_p4 + zext_ln415_71_fu_3216_p1);

assign add_ln415_fu_1290_p2 = ($signed(sext_ln403_fu_1263_p1) + $signed(zext_ln415_fu_1286_p1));

assign add_ln709_63_fu_1735_p2 = ($signed(shl_ln737_65_fu_1712_p3) + $signed(sext_ln1245_68_fu_1726_p1));

assign add_ln709_64_fu_1976_p2 = ($signed(shl_ln737_66_fu_1952_p3) + $signed(sext_ln1245_70_fu_1967_p1));

assign add_ln709_65_fu_2203_p2 = ($signed(shl_ln737_67_fu_2177_p3) + $signed(sext_ln1245_72_fu_2193_p1));

assign add_ln709_66_fu_2461_p2 = ($signed(shl_ln737_68_fu_2438_p3) + $signed(sext_ln1245_74_fu_2452_p1));

assign add_ln709_67_fu_2702_p2 = ($signed(shl_ln737_69_fu_2678_p3) + $signed(sext_ln1245_76_fu_2693_p1));

assign add_ln709_68_fu_2939_p2 = ($signed(shl_ln737_70_fu_2913_p3) + $signed(sext_ln1245_78_fu_2929_p1));

assign add_ln709_69_fu_3179_p2 = ($signed(shl_ln737_71_fu_3156_p3) + $signed(sext_ln1245_80_fu_3170_p1));

assign add_ln709_fu_1483_p2 = ($signed(shl_ln737_64_fu_1459_p3) + $signed(sext_ln1245_66_fu_1474_p1));

assign add_ln_fu_507_p3 = {{h_fu_156}, {w_fu_148}};

assign and_ln237_fu_609_p2 = (xor_ln237_fu_598_p2 & icmp_ln239_fu_603_p2);

assign and_ln414_64_fu_1520_p2 = (tmp_325_fu_1489_p3 & icmp_ln414_64_fu_1515_p2);

assign and_ln414_65_fu_1772_p2 = (tmp_330_fu_1741_p3 & icmp_ln414_65_fu_1767_p2);

assign and_ln414_66_fu_2013_p2 = (tmp_335_fu_1982_p3 & icmp_ln414_66_fu_2008_p2);

assign and_ln414_67_fu_2265_p2 = (tmp_340_reg_3869 & icmp_ln414_67_reg_3882);

assign and_ln414_68_fu_2498_p2 = (tmp_345_fu_2467_p3 & icmp_ln414_68_fu_2493_p2);

assign and_ln414_69_fu_2739_p2 = (tmp_350_fu_2708_p3 & icmp_ln414_69_fu_2734_p2);

assign and_ln414_70_fu_2991_p2 = (tmp_355_reg_4028 & icmp_ln414_70_reg_4041);

assign and_ln414_71_fu_3211_p2 = (tmp_360_fu_3185_p3 & icmp_ln414_71_reg_4069);

assign and_ln414_fu_1280_p2 = (tmp_320_fu_1245_p3 & icmp_ln414_fu_1275_p2);

assign and_ln416_64_fu_1570_p2 = (xor_ln795_131_fu_1565_p2 & tmp_326_reg_3715);

assign and_ln416_65_fu_1914_p2 = (xor_ln795_133_reg_3781 & tmp_331_reg_3771);

assign and_ln416_66_fu_2053_p2 = (xor_ln795_135_fu_2048_p2 & tmp_336_reg_3829);

assign and_ln416_67_fu_2293_p2 = (xor_ln795_137_fu_2287_p2 & tmp_341_reg_3876);

assign and_ln416_68_fu_2640_p2 = (xor_ln795_139_reg_3935 & tmp_346_reg_3925);

assign and_ln416_69_fu_2789_p2 = (xor_ln795_141_fu_2784_p2 & tmp_351_reg_3983);

assign and_ln416_70_fu_3019_p2 = (xor_ln795_143_fu_3013_p2 & tmp_356_reg_4035);

assign and_ln416_71_fu_3332_p2 = (xor_ln795_145_reg_4089 & tmp_361_reg_4079);

assign and_ln416_fu_1310_p2 = (xor_ln795_fu_1304_p2 & tmp_321_fu_1267_p3);

assign and_ln789_64_fu_1609_p2 = (tmp_328_reg_3733 & or_ln789_64_fu_1603_p2);

assign and_ln789_65_fu_1848_p2 = (tmp_333_fu_1802_p3 & or_ln789_65_fu_1842_p2);

assign and_ln789_66_fu_2092_p2 = (tmp_338_reg_3847 & or_ln789_66_fu_2086_p2);

assign and_ln789_67_fu_2333_p2 = (tmp_343_reg_3887 & or_ln789_67_fu_2327_p2);

assign and_ln789_68_fu_2574_p2 = (tmp_348_fu_2528_p3 & or_ln789_68_fu_2568_p2);

assign and_ln789_69_fu_2828_p2 = (tmp_353_reg_4001 & or_ln789_69_fu_2822_p2);

assign and_ln789_70_fu_3059_p2 = (tmp_358_reg_4046 & or_ln789_70_fu_3053_p2);

assign and_ln789_71_fu_3286_p2 = (tmp_363_fu_3240_p3 & or_ln789_71_fu_3280_p2);

assign and_ln789_fu_1362_p2 = (tmp_323_fu_1316_p3 & or_ln789_fu_1356_p2);

assign and_ln790_64_fu_1614_p2 = (tmp_328_reg_3733 & and_ln416_64_fu_1570_p2);

assign and_ln790_65_fu_1918_p2 = (tmp_333_reg_3786 & and_ln416_65_fu_1914_p2);

assign and_ln790_66_fu_2097_p2 = (tmp_338_reg_3847 & and_ln416_66_fu_2053_p2);

assign and_ln790_67_fu_2338_p2 = (tmp_343_reg_3887 & and_ln416_67_fu_2293_p2);

assign and_ln790_68_fu_2644_p2 = (tmp_348_reg_3940 & and_ln416_68_fu_2640_p2);

assign and_ln790_69_fu_2833_p2 = (tmp_353_reg_4001 & and_ln416_69_fu_2789_p2);

assign and_ln790_70_fu_3064_p2 = (tmp_358_reg_4046 & and_ln416_70_fu_3019_p2);

assign and_ln790_71_fu_3336_p2 = (tmp_363_reg_4094 & and_ln416_71_fu_3332_p2);

assign and_ln790_fu_1368_p2 = (tmp_323_fu_1316_p3 & and_ln416_fu_1310_p2);

assign and_ln794_64_fu_1635_p2 = (xor_ln794_131_fu_1630_p2 & or_ln794_64_fu_1625_p2);

assign and_ln794_65_fu_1872_p2 = (xor_ln794_133_fu_1866_p2 & or_ln794_65_fu_1860_p2);

assign and_ln794_66_fu_2118_p2 = (xor_ln794_135_fu_2113_p2 & or_ln794_66_fu_2108_p2);

assign and_ln794_67_fu_2360_p2 = (xor_ln794_137_fu_2355_p2 & or_ln794_67_fu_2349_p2);

assign and_ln794_68_fu_2598_p2 = (xor_ln794_139_fu_2592_p2 & or_ln794_68_fu_2586_p2);

assign and_ln794_69_fu_2854_p2 = (xor_ln794_141_fu_2849_p2 & or_ln794_69_fu_2844_p2);

assign and_ln794_70_fu_3086_p2 = (xor_ln794_143_fu_3081_p2 & or_ln794_70_fu_3075_p2);

assign and_ln794_71_fu_3310_p2 = (xor_ln794_145_fu_3304_p2 & or_ln794_71_fu_3298_p2);

assign and_ln794_fu_1392_p2 = (xor_ln794_129_fu_1386_p2 & or_ln794_fu_1380_p2);

assign and_ln795_64_fu_1659_p2 = (xor_ln795_195_fu_1653_p2 & tmp_325_reg_3709);

assign and_ln795_65_fu_1928_p2 = (xor_ln795_196_fu_1923_p2 & tmp_330_reg_3766);

assign and_ln795_66_fu_2142_p2 = (xor_ln795_197_fu_2136_p2 & tmp_335_reg_3823);

assign and_ln795_67_fu_2384_p2 = (xor_ln795_198_fu_2378_p2 & tmp_340_reg_3869);

assign and_ln795_68_fu_2654_p2 = (xor_ln795_199_fu_2649_p2 & tmp_345_reg_3920);

assign and_ln795_69_fu_2878_p2 = (xor_ln795_200_fu_2872_p2 & tmp_350_reg_3977);

assign and_ln795_70_fu_3110_p2 = (xor_ln795_201_fu_3104_p2 & tmp_355_reg_4028);

assign and_ln795_71_fu_3346_p2 = (xor_ln795_202_fu_3341_p2 & tmp_360_reg_4074);

assign and_ln795_fu_1416_p2 = (xor_ln795_194_fu_1410_p2 & tmp_320_fu_1245_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_186_fu_495_p2 = (tmp_fu_487_p3 + 10'd32);

assign empty_187_fu_501_p2 = (tmp_fu_487_p3 + 10'd64);

assign empty_189_fu_545_p2 = (h_fu_156 + 5'd1);

assign empty_190_fu_665_p1 = select_ln238_fu_641_p3[2:0];

assign empty_191_fu_1180_p2 = (p_shl7_fu_1173_p3 + oc_cast4_fu_1170_p1);

assign empty_fu_708_p2 = (p_shl_fu_690_p3 - p_shl6_cast_fu_704_p1);

assign icmp_ln237_fu_436_p2 = ((ap_sig_allocacmp_indvar_flatten147_load == 13'd7200) ? 1'b1 : 1'b0);

assign icmp_ln238_fu_451_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd240) ? 1'b1 : 1'b0);

assign icmp_ln239_fu_603_p2 = ((oc_fu_144 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln414_64_fu_1515_p2 = ((trunc_ln414_64_reg_3699 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_65_fu_1767_p2 = ((trunc_ln414_65_reg_3756 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_66_fu_2008_p2 = ((trunc_ln414_66_reg_3808 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_67_fu_2229_p2 = ((trunc_ln414_67_fu_2225_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_68_fu_2493_p2 = ((trunc_ln414_68_reg_3910 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_69_fu_2734_p2 = ((trunc_ln414_69_reg_3962 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_70_fu_2965_p2 = ((trunc_ln414_70_fu_2961_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_71_fu_3150_p2 = ((trunc_ln414_71_fu_3146_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_1275_p2 = ((trunc_ln414_reg_3668 != 7'd0) ? 1'b1 : 1'b0);

assign in_r_address0 = zext_ln238_16_fu_1121_p1;

assign in_r_address1 = zext_ln238_14_fu_1101_p1;

assign in_r_address2 = zext_ln238_12_fu_1081_p1;

assign in_r_address3 = zext_ln238_10_fu_1069_p1;

assign in_r_address4 = zext_ln238_8_fu_1049_p1;

assign in_r_address5 = zext_ln238_6_fu_1029_p1;

assign in_r_address6 = zext_ln238_4_fu_1017_p1;

assign in_r_address7 = zext_ln238_2_fu_993_p1;

assign in_r_address8 = zext_ln238_fu_975_p1;

assign layers_0_bias_V_address0 = oc_cast15_fu_1166_p1;

assign layers_0_weight_V_address0 = zext_ln1171_72_fu_2776_p1;

assign layers_0_weight_V_address1 = zext_ln1171_71_fu_2635_p1;

assign layers_0_weight_V_address2 = zext_ln1171_70_fu_2430_p1;

assign layers_0_weight_V_address3 = zext_ln1171_69_fu_2248_p1;

assign layers_0_weight_V_address4 = zext_ln1171_68_fu_1909_p1;

assign layers_0_weight_V_address5 = zext_ln1171_67_fu_1704_p1;

assign layers_0_weight_V_address6 = zext_ln1171_66_fu_1557_p1;

assign layers_0_weight_V_address7 = zext_ln1171_65_fu_1217_p1;

assign layers_0_weight_V_address8 = zext_ln1171_fu_1186_p1;

assign mul_ln1171_64_fu_1432_p0 = mul_ln1171_64_fu_1432_p00;

assign mul_ln1171_64_fu_1432_p00 = in_load_1_reg_3592_pp0_iter4_reg;

assign mul_ln1171_65_fu_1674_p0 = mul_ln1171_65_fu_1674_p00;

assign mul_ln1171_65_fu_1674_p00 = in_load_2_reg_3597_pp0_iter6_reg;

assign mul_ln1171_66_fu_1894_p0 = mul_ln1171_66_fu_1894_p00;

assign mul_ln1171_66_fu_1894_p00 = in_load_3_reg_3602_pp0_iter7_reg;

assign mul_ln1171_67_fu_2156_p0 = mul_ln1171_67_fu_2156_p00;

assign mul_ln1171_67_fu_2156_p00 = in_load_4_reg_3607_pp0_iter9_reg;

assign mul_ln1171_68_fu_2399_p0 = mul_ln1171_68_fu_2399_p00;

assign mul_ln1171_68_fu_2399_p00 = in_load_5_reg_3612_pp0_iter10_reg;

assign mul_ln1171_69_fu_2620_p0 = mul_ln1171_69_fu_2620_p00;

assign mul_ln1171_69_fu_2620_p00 = in_load_6_reg_3617_pp0_iter11_reg;

assign mul_ln1171_70_fu_2892_p0 = mul_ln1171_70_fu_2892_p00;

assign mul_ln1171_70_fu_2892_p00 = in_load_7_reg_3622_pp0_iter13_reg;

assign mul_ln1171_71_fu_3124_p0 = mul_ln1171_71_fu_3124_p00;

assign mul_ln1171_71_fu_3124_p00 = in_load_8_reg_3627_pp0_iter14_reg;

assign mul_ln1171_fu_1201_p0 = mul_ln1171_fu_1201_p00;

assign mul_ln1171_fu_1201_p00 = in_load_reg_3587;

assign oc_cast15_fu_1166_p1 = select_ln238_reg_3520_pp0_iter2_reg;

assign oc_cast4_fu_1170_p1 = select_ln238_reg_3520_pp0_iter2_reg;

assign or_ln238_fu_636_p2 = (icmp_ln238_reg_3410 | and_ln237_fu_609_p2);

assign or_ln340_1_fu_1664_p2 = (and_ln795_64_fu_1659_p2 | and_ln794_64_fu_1635_p2);

assign or_ln340_2_fu_1933_p2 = (and_ln795_65_fu_1928_p2 | and_ln794_65_reg_3791);

assign or_ln340_3_fu_2147_p2 = (and_ln795_66_fu_2142_p2 | and_ln794_66_fu_2118_p2);

assign or_ln340_4_fu_2389_p2 = (and_ln795_67_fu_2384_p2 | and_ln794_67_fu_2360_p2);

assign or_ln340_5_fu_2659_p2 = (and_ln795_68_fu_2654_p2 | and_ln794_68_reg_3945);

assign or_ln340_6_fu_2883_p2 = (and_ln795_69_fu_2878_p2 | and_ln794_69_fu_2854_p2);

assign or_ln340_7_fu_3115_p2 = (and_ln795_70_fu_3110_p2 | and_ln794_70_fu_3086_p2);

assign or_ln340_8_fu_3351_p2 = (and_ln795_71_fu_3346_p2 | and_ln794_71_reg_4099);

assign or_ln340_fu_1422_p2 = (and_ln795_fu_1416_p2 | and_ln794_fu_1392_p2);

assign or_ln787_64_fu_1580_p2 = (xor_ln787_131_fu_1575_p2 | tmp_327_reg_3726);

assign or_ln787_65_fu_1816_p2 = (xor_ln787_133_fu_1810_p2 | tmp_332_fu_1788_p3);

assign or_ln787_66_fu_2063_p2 = (xor_ln787_135_fu_2058_p2 | tmp_337_reg_3840);

assign or_ln787_67_fu_2303_p2 = (xor_ln787_137_fu_2298_p2 | tmp_342_fu_2279_p3);

assign or_ln787_68_fu_2542_p2 = (xor_ln787_139_fu_2536_p2 | tmp_347_fu_2514_p3);

assign or_ln787_69_fu_2799_p2 = (xor_ln787_141_fu_2794_p2 | tmp_352_reg_3994);

assign or_ln787_70_fu_3029_p2 = (xor_ln787_143_fu_3024_p2 | tmp_357_fu_3005_p3);

assign or_ln787_71_fu_3254_p2 = (xor_ln787_145_fu_3248_p2 | tmp_362_fu_3226_p3);

assign or_ln787_fu_1330_p2 = (xor_ln787_fu_1324_p2 | tmp_322_fu_1296_p3);

assign or_ln789_64_fu_1603_p2 = (xor_ln789_64_fu_1597_p2 | or_ln787_64_fu_1580_p2);

assign or_ln789_65_fu_1842_p2 = (xor_ln789_65_fu_1836_p2 | or_ln787_65_fu_1816_p2);

assign or_ln789_66_fu_2086_p2 = (xor_ln789_66_fu_2080_p2 | or_ln787_66_fu_2063_p2);

assign or_ln789_67_fu_2327_p2 = (xor_ln789_67_fu_2321_p2 | or_ln787_67_fu_2303_p2);

assign or_ln789_68_fu_2568_p2 = (xor_ln789_68_fu_2562_p2 | or_ln787_68_fu_2542_p2);

assign or_ln789_69_fu_2822_p2 = (xor_ln789_69_fu_2816_p2 | or_ln787_69_fu_2799_p2);

assign or_ln789_70_fu_3053_p2 = (xor_ln789_70_fu_3047_p2 | or_ln787_70_fu_3029_p2);

assign or_ln789_71_fu_3280_p2 = (xor_ln789_71_fu_3274_p2 | or_ln787_71_fu_3254_p2);

assign or_ln789_fu_1356_p2 = (xor_ln789_fu_1350_p2 | or_ln787_fu_1330_p2);

assign or_ln794_64_fu_1625_p2 = (xor_ln794_130_fu_1619_p2 | tmp_327_reg_3726);

assign or_ln794_65_fu_1860_p2 = (xor_ln794_132_fu_1854_p2 | tmp_332_fu_1788_p3);

assign or_ln794_66_fu_2108_p2 = (xor_ln794_134_fu_2102_p2 | tmp_337_reg_3840);

assign or_ln794_67_fu_2349_p2 = (xor_ln794_136_fu_2343_p2 | tmp_342_fu_2279_p3);

assign or_ln794_68_fu_2586_p2 = (xor_ln794_138_fu_2580_p2 | tmp_347_fu_2514_p3);

assign or_ln794_69_fu_2844_p2 = (xor_ln794_140_fu_2838_p2 | tmp_352_reg_3994);

assign or_ln794_70_fu_3075_p2 = (xor_ln794_142_fu_3069_p2 | tmp_357_fu_3005_p3);

assign or_ln794_71_fu_3298_p2 = (xor_ln794_144_fu_3292_p2 | tmp_362_fu_3226_p3);

assign or_ln794_fu_1380_p2 = (xor_ln794_fu_1374_p2 | tmp_322_fu_1296_p3);

assign or_ln795_64_fu_1647_p2 = (xor_ln795_132_fu_1641_p2 | xor_ln795_131_fu_1565_p2);

assign or_ln795_65_fu_1884_p2 = (xor_ln795_134_fu_1878_p2 | xor_ln795_133_fu_1796_p2);

assign or_ln795_66_fu_2130_p2 = (xor_ln795_136_fu_2124_p2 | xor_ln795_135_fu_2048_p2);

assign or_ln795_67_fu_2372_p2 = (xor_ln795_138_fu_2366_p2 | xor_ln795_137_fu_2287_p2);

assign or_ln795_68_fu_2610_p2 = (xor_ln795_140_fu_2604_p2 | xor_ln795_139_fu_2522_p2);

assign or_ln795_69_fu_2866_p2 = (xor_ln795_142_fu_2860_p2 | xor_ln795_141_fu_2784_p2);

assign or_ln795_70_fu_3098_p2 = (xor_ln795_144_fu_3092_p2 | xor_ln795_143_fu_3013_p2);

assign or_ln795_71_fu_3322_p2 = (xor_ln795_146_fu_3316_p2 | xor_ln795_145_fu_3234_p2);

assign or_ln795_fu_1404_p2 = (xor_ln795_fu_1304_p2 | xor_ln795_130_fu_1398_p2);

assign out_r_address0 = zext_ln240_fu_3328_p1;

assign out_r_d0 = ((or_ln340_8_fu_3351_p2[0:0] == 1'b1) ? select_ln384_136_fu_3356_p3 : add_ln415_71_reg_4084);

assign p_mid141_fu_803_p2 = (p_shl_mid1_fu_785_p3 - p_shl6_cast_mid1_fu_799_p1);

assign p_mid147_fu_559_p2 = (p_mid_fu_551_p3 + 10'd32);

assign p_mid149_fu_565_p2 = (p_mid_fu_551_p3 + 10'd64);

assign p_mid1_fu_952_p3 = {{add_ln246_2_reg_3513}, {3'd0}};

assign p_mid_fu_551_p3 = {{empty_189_fu_545_p2}, {5'd0}};

assign p_shl6_cast_fu_704_p1 = p_shl6_fu_697_p3;

assign p_shl6_cast_mid1_fu_799_p1 = p_shl6_mid1_fu_792_p3;

assign p_shl6_fu_697_p3 = {{h_4_reg_3440}, {4'd0}};

assign p_shl6_mid1_fu_792_p3 = {{empty_189_reg_3470}, {4'd0}};

assign p_shl7_fu_1173_p3 = {{empty_190_reg_3532_pp0_iter2_reg}, {3'd0}};

assign p_shl_fu_690_p3 = {{h_4_reg_3440}, {8'd0}};

assign p_shl_mid1_fu_785_p3 = {{empty_189_reg_3470}, {8'd0}};

assign select_ln237_10_fu_879_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_5_mid_fu_872_p3 : add_ln1169_5_fu_758_p3);

assign select_ln237_11_fu_893_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_6_mid_fu_886_p3 : add_ln1169_6_fu_765_p3);

assign select_ln237_12_fu_907_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_7_mid_fu_900_p3 : add_ln1169_7_fu_771_p3);

assign select_ln237_13_fu_921_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_8_mid_fu_914_p3 : add_ln1169_8_fu_778_p3);

assign select_ln237_14_fu_615_p3 = ((icmp_ln238_reg_3410[0:0] == 1'b1) ? empty_189_fu_545_p2 : h_fu_156);

assign select_ln237_15_fu_928_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? tmp_202_mid_reg_3478 : tmp_7_reg_3448);

assign select_ln237_16_fu_940_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? tmp_205_mid_reg_3486 : tmp_8_reg_3456);

assign select_ln237_17_fu_1146_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? tmp_9_fu_1126_p4 : tmp_10_fu_1136_p4);

assign select_ln237_4_fu_809_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? 8'd0 : tmp_s_fu_714_p3);

assign select_ln237_5_fu_571_p3 = ((icmp_ln238_reg_3410[0:0] == 1'b1) ? p_mid_fu_551_p3 : add_ln_fu_507_p3);

assign select_ln237_6_fu_823_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_1_mid_fu_816_p3 : add_ln1169_1_fu_726_p3);

assign select_ln237_7_fu_837_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_2_mid_fu_830_p3 : add_ln1169_2_fu_738_p3);

assign select_ln237_8_fu_851_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_3_mid_fu_844_p3 : add_ln1169_3_fu_745_p3);

assign select_ln237_9_fu_865_p3 = ((icmp_ln238_reg_3410_pp0_iter1_reg[0:0] == 1'b1) ? add_ln1169_4_mid_fu_858_p3 : add_ln1169_4_fu_751_p3);

assign select_ln237_fu_538_p3 = ((icmp_ln238_reg_3410[0:0] == 1'b1) ? 5'd0 : w_fu_148);

assign select_ln238_10_fu_1062_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_5_mid1_fu_1054_p3 : select_ln237_10_fu_879_p3);

assign select_ln238_11_fu_1074_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_7_dup_fu_945_p3 : select_ln237_11_fu_893_p3);

assign select_ln238_12_fu_1094_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_7_mid1_fu_1086_p3 : select_ln237_12_fu_907_p3);

assign select_ln238_13_fu_1114_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_8_mid1_fu_1106_p3 : select_ln237_13_fu_921_p3);

assign select_ln238_14_fu_657_p3 = ((and_ln237_fu_609_p2[0:0] == 1'b1) ? add_ln246_2_fu_622_p2 : select_ln237_fu_538_p3);

assign select_ln238_15_fu_463_p3 = ((icmp_ln238_fu_451_p2[0:0] == 1'b1) ? 9'd1 : add_ln238_fu_457_p2);

assign select_ln238_4_fu_959_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? p_mid1_fu_952_p3 : select_ln237_4_fu_809_p3);

assign select_ln238_5_fu_649_p3 = ((and_ln237_fu_609_p2[0:0] == 1'b1) ? add_ln1169_1_dup_fu_628_p3 : select_ln237_5_fu_571_p3);

assign select_ln238_6_fu_986_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_1_mid1_fu_979_p3 : select_ln237_6_fu_823_p3);

assign select_ln238_7_fu_1010_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_2_mid1_fu_1003_p3 : select_ln237_7_fu_837_p3);

assign select_ln238_8_fu_1022_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_4_dup_fu_933_p3 : select_ln237_8_fu_851_p3);

assign select_ln238_9_fu_1042_p3 = ((and_ln237_reg_3494[0:0] == 1'b1) ? add_ln1169_4_mid1_fu_1034_p3 : select_ln237_9_fu_865_p3);

assign select_ln238_fu_641_p3 = ((or_ln238_fu_636_p2[0:0] == 1'b1) ? 4'd0 : oc_fu_144);

assign select_ln340_1_fu_1688_p3 = ((or_ln340_1_fu_1664_p2[0:0] == 1'b1) ? select_ln384_129_fu_1680_p3 : add_ln415_64_reg_3721);

assign select_ln340_2_fu_1945_p3 = ((or_ln340_2_fu_1933_p2[0:0] == 1'b1) ? select_ln384_130_fu_1938_p3 : add_ln415_65_reg_3776);

assign select_ln340_3_fu_2170_p3 = ((or_ln340_3_fu_2147_p2[0:0] == 1'b1) ? select_ln384_131_fu_2162_p3 : add_ln415_66_reg_3835);

assign select_ln340_4_fu_2413_p3 = ((or_ln340_4_fu_2389_p2[0:0] == 1'b1) ? select_ln384_132_fu_2405_p3 : add_ln415_67_fu_2273_p2);

assign select_ln340_5_fu_2671_p3 = ((or_ln340_5_fu_2659_p2[0:0] == 1'b1) ? select_ln384_133_fu_2664_p3 : add_ln415_68_reg_3930);

assign select_ln340_6_fu_2906_p3 = ((or_ln340_6_fu_2883_p2[0:0] == 1'b1) ? select_ln384_134_fu_2898_p3 : add_ln415_69_reg_3989);

assign select_ln340_7_fu_3138_p3 = ((or_ln340_7_fu_3115_p2[0:0] == 1'b1) ? select_ln384_135_fu_3130_p3 : add_ln415_70_fu_2999_p2);

assign select_ln340_fu_1452_p3 = ((or_ln340_reg_3688[0:0] == 1'b1) ? select_ln384_fu_1445_p3 : sext_ln755_fu_1442_p1);

assign select_ln384_129_fu_1680_p3 = ((and_ln794_64_fu_1635_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_130_fu_1938_p3 = ((and_ln794_65_reg_3791[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_131_fu_2162_p3 = ((and_ln794_66_fu_2118_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_132_fu_2405_p3 = ((and_ln794_67_fu_2360_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_133_fu_2664_p3 = ((and_ln794_68_reg_3945[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_134_fu_2898_p3 = ((and_ln794_69_fu_2854_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_135_fu_3130_p3 = ((and_ln794_70_fu_3086_p2[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_136_fu_3356_p3 = ((and_ln794_71_reg_4099[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_fu_1445_p3 = ((and_ln794_reg_3683[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign sext_ln1245_65_fu_1471_p1 = mul_ln1171_64_reg_3693;

assign sext_ln1245_66_fu_1474_p1 = mul_ln1171_64_reg_3693;

assign sext_ln1245_67_fu_1723_p1 = mul_ln1171_65_reg_3745;

assign sext_ln1245_68_fu_1726_p1 = mul_ln1171_65_reg_3745;

assign sext_ln1245_69_fu_1964_p1 = mul_ln1171_66_reg_3802;

assign sext_ln1245_70_fu_1967_p1 = mul_ln1171_66_reg_3802;

assign sext_ln1245_71_fu_2189_p1 = mul_ln1171_67_fu_2156_p2;

assign sext_ln1245_72_fu_2193_p1 = mul_ln1171_67_fu_2156_p2;

assign sext_ln1245_73_fu_2449_p1 = mul_ln1171_68_reg_3899;

assign sext_ln1245_74_fu_2452_p1 = mul_ln1171_68_reg_3899;

assign sext_ln1245_75_fu_2690_p1 = mul_ln1171_69_reg_3956;

assign sext_ln1245_76_fu_2693_p1 = mul_ln1171_69_reg_3956;

assign sext_ln1245_77_fu_2925_p1 = mul_ln1171_70_fu_2892_p2;

assign sext_ln1245_78_fu_2929_p1 = mul_ln1171_70_fu_2892_p2;

assign sext_ln1245_79_fu_3167_p1 = mul_ln1171_71_reg_4058;

assign sext_ln1245_80_fu_3170_p1 = mul_ln1171_71_reg_4058;

assign sext_ln1245_fu_1236_p1 = mul_ln1171_reg_3663;

assign sext_ln403_fu_1263_p1 = $signed(trunc_ln_fu_1253_p4);

assign sext_ln712_64_fu_1467_p1 = shl_ln737_64_fu_1459_p3;

assign sext_ln712_65_fu_1719_p1 = shl_ln737_65_fu_1712_p3;

assign sext_ln712_66_fu_1960_p1 = shl_ln737_66_fu_1952_p3;

assign sext_ln712_67_fu_2185_p1 = shl_ln737_67_fu_2177_p3;

assign sext_ln712_68_fu_2445_p1 = shl_ln737_68_fu_2438_p3;

assign sext_ln712_69_fu_2686_p1 = shl_ln737_69_fu_2678_p3;

assign sext_ln712_70_fu_2921_p1 = shl_ln737_70_fu_2913_p3;

assign sext_ln712_71_fu_3163_p1 = shl_ln737_71_fu_3156_p3;

assign sext_ln712_fu_1232_p1 = $signed(shl_ln737_s_fu_1225_p3);

assign sext_ln755_fu_1442_p1 = add_ln415_reg_3678;

assign shl_ln737_64_fu_1459_p3 = {{select_ln340_fu_1452_p3}, {7'd0}};

assign shl_ln737_65_fu_1712_p3 = {{select_ln340_1_reg_3751}, {7'd0}};

assign shl_ln737_66_fu_1952_p3 = {{select_ln340_2_fu_1945_p3}, {7'd0}};

assign shl_ln737_67_fu_2177_p3 = {{select_ln340_3_fu_2170_p3}, {7'd0}};

assign shl_ln737_68_fu_2438_p3 = {{select_ln340_4_reg_3905}, {7'd0}};

assign shl_ln737_69_fu_2678_p3 = {{select_ln340_5_fu_2671_p3}, {7'd0}};

assign shl_ln737_70_fu_2913_p3 = {{select_ln340_6_fu_2906_p3}, {7'd0}};

assign shl_ln737_71_fu_3156_p3 = {{select_ln340_7_reg_4064}, {7'd0}};

assign shl_ln737_s_fu_1225_p3 = {{layers_0_bias_V_load_reg_3647}, {8'd0}};

assign tmp1_fu_1153_p3 = {{select_ln237_17_fu_1146_p3}, {select_ln238_reg_3520}};

assign tmp_10_fu_1136_p4 = {{empty_fu_708_p2[12:4]}};

assign tmp_320_fu_1245_p3 = add_ln1245_fu_1239_p2[32'd16];

assign tmp_321_fu_1267_p3 = add_ln1245_fu_1239_p2[32'd16];

assign tmp_322_fu_1296_p3 = add_ln415_fu_1290_p2[32'd10];

assign tmp_323_fu_1316_p3 = add_ln1245_fu_1239_p2[32'd16];

assign tmp_324_fu_1342_p3 = add_ln1245_fu_1239_p2[32'd16];

assign tmp_325_fu_1489_p3 = add_ln1245_65_fu_1477_p2[32'd23];

assign tmp_329_fu_1590_p3 = add_ln1245_65_reg_3704[32'd23];

assign tmp_330_fu_1741_p3 = add_ln1245_66_fu_1729_p2[32'd23];

assign tmp_331_fu_1759_p3 = add_ln709_63_fu_1735_p2[32'd22];

assign tmp_332_fu_1788_p3 = add_ln415_65_fu_1782_p2[32'd15];

assign tmp_333_fu_1802_p3 = add_ln1245_66_fu_1729_p2[32'd23];

assign tmp_334_fu_1828_p3 = add_ln1245_66_fu_1729_p2[32'd23];

assign tmp_335_fu_1982_p3 = add_ln1245_67_fu_1970_p2[32'd23];

assign tmp_339_fu_2073_p3 = add_ln1245_67_reg_3818[32'd23];

assign tmp_342_fu_2279_p3 = add_ln415_67_fu_2273_p2[32'd15];

assign tmp_344_fu_2314_p3 = add_ln1245_68_reg_3859[32'd23];

assign tmp_345_fu_2467_p3 = add_ln1245_69_fu_2455_p2[32'd23];

assign tmp_346_fu_2485_p3 = add_ln709_66_fu_2461_p2[32'd22];

assign tmp_347_fu_2514_p3 = add_ln415_68_fu_2508_p2[32'd15];

assign tmp_348_fu_2528_p3 = add_ln1245_69_fu_2455_p2[32'd23];

assign tmp_349_fu_2554_p3 = add_ln1245_69_fu_2455_p2[32'd23];

assign tmp_350_fu_2708_p3 = add_ln1245_70_fu_2696_p2[32'd23];

assign tmp_354_fu_2809_p3 = add_ln1245_70_reg_3972[32'd23];

assign tmp_357_fu_3005_p3 = add_ln415_70_fu_2999_p2[32'd15];

assign tmp_359_fu_3040_p3 = add_ln1245_71_reg_4018[32'd23];

assign tmp_360_fu_3185_p3 = add_ln1245_72_fu_3173_p2[32'd23];

assign tmp_361_fu_3203_p3 = add_ln709_69_fu_3179_p2[32'd22];

assign tmp_362_fu_3226_p3 = add_ln415_71_fu_3220_p2[32'd15];

assign tmp_363_fu_3240_p3 = add_ln1245_72_fu_3173_p2[32'd23];

assign tmp_364_fu_3266_p3 = add_ln1245_72_fu_3173_p2[32'd23];

assign tmp_9_fu_1126_p4 = {{p_mid141_fu_803_p2[12:4]}};

assign tmp_fu_487_p3 = {{h_fu_156}, {5'd0}};

assign tmp_s_fu_714_p3 = {{w_6_reg_3431}, {3'd0}};

assign trunc_ln414_64_fu_1438_p1 = mul_ln1171_64_fu_1432_p2[6:0];

assign trunc_ln414_65_fu_1695_p1 = mul_ln1171_65_fu_1674_p2[6:0];

assign trunc_ln414_66_fu_1900_p1 = mul_ln1171_66_fu_1894_p2[6:0];

assign trunc_ln414_67_fu_2225_p1 = mul_ln1171_67_fu_2156_p2[6:0];

assign trunc_ln414_68_fu_2421_p1 = mul_ln1171_68_fu_2399_p2[6:0];

assign trunc_ln414_69_fu_2626_p1 = mul_ln1171_69_fu_2620_p2[6:0];

assign trunc_ln414_70_fu_2961_p1 = mul_ln1171_70_fu_2892_p2[6:0];

assign trunc_ln414_71_fu_3146_p1 = mul_ln1171_71_fu_3124_p2[6:0];

assign trunc_ln414_fu_1207_p1 = mul_ln1171_fu_1201_p2[6:0];

assign trunc_ln717_63_fu_1749_p4 = {{add_ln709_63_fu_1735_p2[22:7]}};

assign trunc_ln717_64_fu_1990_p4 = {{add_ln709_64_fu_1976_p2[22:7]}};

assign trunc_ln717_65_fu_2256_p4 = {{add_ln709_65_reg_3864[22:7]}};

assign trunc_ln717_66_fu_2475_p4 = {{add_ln709_66_fu_2461_p2[22:7]}};

assign trunc_ln717_67_fu_2716_p4 = {{add_ln709_67_fu_2702_p2[22:7]}};

assign trunc_ln717_68_fu_2982_p4 = {{add_ln709_68_reg_4023[22:7]}};

assign trunc_ln717_69_fu_3193_p4 = {{add_ln709_69_fu_3179_p2[22:7]}};

assign trunc_ln717_s_fu_1497_p4 = {{add_ln709_fu_1483_p2[22:7]}};

assign trunc_ln_fu_1253_p4 = {{add_ln1245_fu_1239_p2[16:7]}};

assign xor_ln237_fu_598_p2 = (icmp_ln238_reg_3410 ^ 1'd1);

assign xor_ln787_130_fu_1336_p2 = (tmp_323_fu_1316_p3 ^ or_ln787_fu_1330_p2);

assign xor_ln787_131_fu_1575_p2 = (tmp_326_reg_3715 ^ 1'd1);

assign xor_ln787_132_fu_1585_p2 = (tmp_328_reg_3733 ^ or_ln787_64_fu_1580_p2);

assign xor_ln787_133_fu_1810_p2 = (tmp_331_fu_1759_p3 ^ 1'd1);

assign xor_ln787_134_fu_1822_p2 = (tmp_333_fu_1802_p3 ^ or_ln787_65_fu_1816_p2);

assign xor_ln787_135_fu_2058_p2 = (tmp_336_reg_3829 ^ 1'd1);

assign xor_ln787_136_fu_2068_p2 = (tmp_338_reg_3847 ^ or_ln787_66_fu_2063_p2);

assign xor_ln787_137_fu_2298_p2 = (tmp_341_reg_3876 ^ 1'd1);

assign xor_ln787_138_fu_2309_p2 = (tmp_343_reg_3887 ^ or_ln787_67_fu_2303_p2);

assign xor_ln787_139_fu_2536_p2 = (tmp_346_fu_2485_p3 ^ 1'd1);

assign xor_ln787_140_fu_2548_p2 = (tmp_348_fu_2528_p3 ^ or_ln787_68_fu_2542_p2);

assign xor_ln787_141_fu_2794_p2 = (tmp_351_reg_3983 ^ 1'd1);

assign xor_ln787_142_fu_2804_p2 = (tmp_353_reg_4001 ^ or_ln787_69_fu_2799_p2);

assign xor_ln787_143_fu_3024_p2 = (tmp_356_reg_4035 ^ 1'd1);

assign xor_ln787_144_fu_3035_p2 = (tmp_358_reg_4046 ^ or_ln787_70_fu_3029_p2);

assign xor_ln787_145_fu_3248_p2 = (tmp_361_fu_3203_p3 ^ 1'd1);

assign xor_ln787_146_fu_3260_p2 = (tmp_363_fu_3240_p3 ^ or_ln787_71_fu_3254_p2);

assign xor_ln787_fu_1324_p2 = (tmp_321_fu_1267_p3 ^ 1'd1);

assign xor_ln789_64_fu_1597_p2 = (tmp_329_fu_1590_p3 ^ 1'd1);

assign xor_ln789_65_fu_1836_p2 = (tmp_334_fu_1828_p3 ^ 1'd1);

assign xor_ln789_66_fu_2080_p2 = (tmp_339_fu_2073_p3 ^ 1'd1);

assign xor_ln789_67_fu_2321_p2 = (tmp_344_fu_2314_p3 ^ 1'd1);

assign xor_ln789_68_fu_2562_p2 = (tmp_349_fu_2554_p3 ^ 1'd1);

assign xor_ln789_69_fu_2816_p2 = (tmp_354_fu_2809_p3 ^ 1'd1);

assign xor_ln789_70_fu_3047_p2 = (tmp_359_fu_3040_p3 ^ 1'd1);

assign xor_ln789_71_fu_3274_p2 = (tmp_364_fu_3266_p3 ^ 1'd1);

assign xor_ln789_fu_1350_p2 = (tmp_324_fu_1342_p3 ^ 1'd1);

assign xor_ln794_129_fu_1386_p2 = (tmp_320_fu_1245_p3 ^ 1'd1);

assign xor_ln794_130_fu_1619_p2 = (xor_ln787_132_fu_1585_p2 ^ 1'd1);

assign xor_ln794_131_fu_1630_p2 = (tmp_325_reg_3709 ^ 1'd1);

assign xor_ln794_132_fu_1854_p2 = (xor_ln787_134_fu_1822_p2 ^ 1'd1);

assign xor_ln794_133_fu_1866_p2 = (tmp_330_fu_1741_p3 ^ 1'd1);

assign xor_ln794_134_fu_2102_p2 = (xor_ln787_136_fu_2068_p2 ^ 1'd1);

assign xor_ln794_135_fu_2113_p2 = (tmp_335_reg_3823 ^ 1'd1);

assign xor_ln794_136_fu_2343_p2 = (xor_ln787_138_fu_2309_p2 ^ 1'd1);

assign xor_ln794_137_fu_2355_p2 = (tmp_340_reg_3869 ^ 1'd1);

assign xor_ln794_138_fu_2580_p2 = (xor_ln787_140_fu_2548_p2 ^ 1'd1);

assign xor_ln794_139_fu_2592_p2 = (tmp_345_fu_2467_p3 ^ 1'd1);

assign xor_ln794_140_fu_2838_p2 = (xor_ln787_142_fu_2804_p2 ^ 1'd1);

assign xor_ln794_141_fu_2849_p2 = (tmp_350_reg_3977 ^ 1'd1);

assign xor_ln794_142_fu_3069_p2 = (xor_ln787_144_fu_3035_p2 ^ 1'd1);

assign xor_ln794_143_fu_3081_p2 = (tmp_355_reg_4028 ^ 1'd1);

assign xor_ln794_144_fu_3292_p2 = (xor_ln787_146_fu_3260_p2 ^ 1'd1);

assign xor_ln794_145_fu_3304_p2 = (tmp_360_fu_3185_p3 ^ 1'd1);

assign xor_ln794_fu_1374_p2 = (xor_ln787_130_fu_1336_p2 ^ 1'd1);

assign xor_ln795_130_fu_1398_p2 = (1'd1 ^ and_ln789_fu_1362_p2);

assign xor_ln795_131_fu_1565_p2 = (tmp_327_reg_3726 ^ 1'd1);

assign xor_ln795_132_fu_1641_p2 = (1'd1 ^ and_ln789_64_fu_1609_p2);

assign xor_ln795_133_fu_1796_p2 = (tmp_332_fu_1788_p3 ^ 1'd1);

assign xor_ln795_134_fu_1878_p2 = (1'd1 ^ and_ln789_65_fu_1848_p2);

assign xor_ln795_135_fu_2048_p2 = (tmp_337_reg_3840 ^ 1'd1);

assign xor_ln795_136_fu_2124_p2 = (1'd1 ^ and_ln789_66_fu_2092_p2);

assign xor_ln795_137_fu_2287_p2 = (tmp_342_fu_2279_p3 ^ 1'd1);

assign xor_ln795_138_fu_2366_p2 = (1'd1 ^ and_ln789_67_fu_2333_p2);

assign xor_ln795_139_fu_2522_p2 = (tmp_347_fu_2514_p3 ^ 1'd1);

assign xor_ln795_140_fu_2604_p2 = (1'd1 ^ and_ln789_68_fu_2574_p2);

assign xor_ln795_141_fu_2784_p2 = (tmp_352_reg_3994 ^ 1'd1);

assign xor_ln795_142_fu_2860_p2 = (1'd1 ^ and_ln789_69_fu_2828_p2);

assign xor_ln795_143_fu_3013_p2 = (tmp_357_fu_3005_p3 ^ 1'd1);

assign xor_ln795_144_fu_3092_p2 = (1'd1 ^ and_ln789_70_fu_3059_p2);

assign xor_ln795_145_fu_3234_p2 = (tmp_362_fu_3226_p3 ^ 1'd1);

assign xor_ln795_146_fu_3316_p2 = (1'd1 ^ and_ln789_71_fu_3286_p2);

assign xor_ln795_194_fu_1410_p2 = (or_ln795_fu_1404_p2 ^ and_ln790_fu_1368_p2);

assign xor_ln795_195_fu_1653_p2 = (or_ln795_64_fu_1647_p2 ^ and_ln790_64_fu_1614_p2);

assign xor_ln795_196_fu_1923_p2 = (or_ln795_65_reg_3797 ^ and_ln790_65_fu_1918_p2);

assign xor_ln795_197_fu_2136_p2 = (or_ln795_66_fu_2130_p2 ^ and_ln790_66_fu_2097_p2);

assign xor_ln795_198_fu_2378_p2 = (or_ln795_67_fu_2372_p2 ^ and_ln790_67_fu_2338_p2);

assign xor_ln795_199_fu_2649_p2 = (or_ln795_68_reg_3951 ^ and_ln790_68_fu_2644_p2);

assign xor_ln795_200_fu_2872_p2 = (or_ln795_69_fu_2866_p2 ^ and_ln790_69_fu_2833_p2);

assign xor_ln795_201_fu_3104_p2 = (or_ln795_70_fu_3098_p2 ^ and_ln790_70_fu_3064_p2);

assign xor_ln795_202_fu_3341_p2 = (or_ln795_71_reg_4105 ^ and_ln790_71_fu_3336_p2);

assign xor_ln795_fu_1304_p2 = (tmp_322_fu_1296_p3 ^ 1'd1);

assign zext_ln1171_64_fu_1194_p1 = empty_191_reg_3637;

assign zext_ln1171_65_fu_1217_p1 = add_ln255_fu_1211_p2;

assign zext_ln1171_66_fu_1557_p1 = add_ln255_3_fu_1552_p2;

assign zext_ln1171_67_fu_1704_p1 = add_ln255_4_fu_1699_p2;

assign zext_ln1171_68_fu_1909_p1 = add_ln255_5_fu_1904_p2;

assign zext_ln1171_69_fu_2248_p1 = add_ln255_6_fu_2243_p2;

assign zext_ln1171_70_fu_2430_p1 = add_ln255_7_fu_2425_p2;

assign zext_ln1171_71_fu_2635_p1 = add_ln255_8_fu_2630_p2;

assign zext_ln1171_72_fu_2776_p1 = add_ln255_9_fu_2771_p2;

assign zext_ln1171_fu_1186_p1 = empty_191_fu_1180_p2;

assign zext_ln238_10_fu_1069_p1 = select_ln238_10_fu_1062_p3;

assign zext_ln238_12_fu_1081_p1 = select_ln238_11_fu_1074_p3;

assign zext_ln238_14_fu_1101_p1 = select_ln238_12_fu_1094_p3;

assign zext_ln238_16_fu_1121_p1 = select_ln238_13_fu_1114_p3;

assign zext_ln238_2_fu_993_p1 = select_ln238_6_fu_986_p3;

assign zext_ln238_4_fu_1017_p1 = select_ln238_7_fu_1010_p3;

assign zext_ln238_6_fu_1029_p1 = select_ln238_8_fu_1022_p3;

assign zext_ln238_8_fu_1049_p1 = select_ln238_9_fu_1042_p3;

assign zext_ln238_fu_975_p1 = select_ln238_5_reg_3527;

assign zext_ln240_fu_3328_p1 = add_ln240_reg_3582_pp0_iter16_reg;

assign zext_ln246_fu_966_p1 = select_ln238_4_fu_959_p3;

assign zext_ln415_64_fu_1526_p1 = and_ln414_64_fu_1520_p2;

assign zext_ln415_65_fu_1778_p1 = and_ln414_65_fu_1772_p2;

assign zext_ln415_66_fu_2019_p1 = and_ln414_66_fu_2013_p2;

assign zext_ln415_67_fu_2269_p1 = and_ln414_67_fu_2265_p2;

assign zext_ln415_68_fu_2504_p1 = and_ln414_68_fu_2498_p2;

assign zext_ln415_69_fu_2745_p1 = and_ln414_69_fu_2739_p2;

assign zext_ln415_70_fu_2995_p1 = and_ln414_70_fu_2991_p2;

assign zext_ln415_71_fu_3216_p1 = and_ln414_71_fu_3211_p2;

assign zext_ln415_fu_1286_p1 = and_ln414_fu_1280_p2;

always @ (posedge ap_clk) begin
    zext_ln1171_64_reg_3652[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter5_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter6_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter7_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter8_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter9_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter10_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter11_reg[6] <= 1'b0;
    zext_ln1171_64_reg_3652_pp0_iter12_reg[6] <= 1'b0;
end

endmodule //mydataset_lane_Conv_ap_fixed_16_8_6_0_0_ap_fixed_16_8_6_0_0_ap_fixed_8_1_6_0_0_const_ap_fixed_8_1_6_0_0_const_1_32_32_8_30_30_3_1_0_s
