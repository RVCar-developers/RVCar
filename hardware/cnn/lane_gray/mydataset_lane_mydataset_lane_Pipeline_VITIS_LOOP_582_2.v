// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_582_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sext_ln581,
        out6_V_address0,
        out6_V_ce0,
        out6_V_we0,
        out6_V_d0,
        zext_ln580,
        zext_ln582,
        p_shl21_cast,
        out5_V_address0,
        out5_V_ce0,
        out5_V_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [5:0] sext_ln581;
output  [5:0] out6_V_address0;
output   out6_V_ce0;
output   out6_V_we0;
output  [15:0] out6_V_d0;
input  [5:0] zext_ln580;
input  [11:0] zext_ln582;
input  [14:0] p_shl21_cast;
output  [9:0] out5_V_address0;
output   out5_V_ce0;
input  [15:0] out5_V_q0;

reg ap_idle;
reg out6_V_ce0;
reg out6_V_we0;
reg out5_V_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln582_fu_172_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [15:0] layers_7_weight_V_address0;
reg    layers_7_weight_V_ce0;
wire  signed [5:0] layers_7_weight_V_q0;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] p_shl21_cast_cast_fu_142_p1;
reg   [15:0] p_shl21_cast_cast_reg_480;
reg   [9:0] i_2_reg_485;
reg   [5:0] out6_V_addr_reg_490;
reg   [5:0] out6_V_addr_reg_490_pp0_iter1_reg;
reg   [5:0] out6_V_addr_reg_490_pp0_iter2_reg;
reg   [5:0] out6_V_addr_reg_490_pp0_iter3_reg;
reg   [5:0] out6_V_addr_reg_490_pp0_iter4_reg;
reg   [5:0] out6_V_addr_reg_490_pp0_iter5_reg;
reg   [5:0] out6_V_addr_reg_490_pp0_iter6_reg;
wire   [12:0] add_ln583_1_fu_188_p2;
reg   [12:0] add_ln583_1_reg_499;
wire   [0:0] ifzero_fu_194_p2;
reg   [0:0] ifzero_reg_504;
reg   [0:0] ifzero_reg_504_pp0_iter1_reg;
reg   [0:0] ifzero_reg_504_pp0_iter2_reg;
reg   [0:0] ifzero_reg_504_pp0_iter3_reg;
reg   [0:0] ifzero_reg_504_pp0_iter4_reg;
reg   [0:0] ifzero_reg_504_pp0_iter5_reg;
reg   [0:0] ifzero_reg_504_pp0_iter6_reg;
wire  signed [21:0] grp_fu_459_p2;
reg  signed [21:0] r_V_2_reg_528;
wire   [0:0] icmp_ln414_fu_233_p2;
reg   [0:0] icmp_ln414_reg_534;
wire   [0:0] p_Result_s_fu_272_p3;
reg   [0:0] p_Result_s_reg_539;
wire   [0:0] p_Result_1_fu_290_p3;
reg   [0:0] p_Result_1_reg_544;
wire   [15:0] p_Val2_2_fu_307_p2;
reg   [15:0] p_Val2_2_reg_549;
wire   [0:0] xor_ln795_fu_321_p2;
reg   [0:0] xor_ln795_reg_554;
wire   [0:0] Range2_all_ones_fu_327_p3;
reg   [0:0] Range2_all_ones_reg_559;
wire   [0:0] overflow_fu_397_p2;
reg   [0:0] overflow_reg_564;
wire   [0:0] or_ln795_fu_409_p2;
reg   [0:0] or_ln795_reg_570;
wire   [63:0] zext_ln580_cast_fu_150_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] i_3_cast128_fu_205_p1;
wire   [63:0] zext_ln1169_fu_217_p1;
reg   [15:0] lhs_fu_72;
wire   [15:0] select_ln384_fu_446_p3;
wire  signed [15:0] sext_ln581_cast_fu_155_p1;
reg   [15:0] ap_sig_allocacmp_lhs_load;
wire    ap_loop_init;
reg   [9:0] i_fu_76;
wire   [9:0] add_ln582_fu_178_p2;
reg   [9:0] ap_sig_allocacmp_i_2;
wire   [12:0] zext_ln582_cast_fu_146_p1;
wire   [12:0] i_3_cast_fu_184_p1;
wire   [15:0] zext_ln583_fu_209_p1;
wire   [15:0] add_ln583_fu_212_p2;
wire   [6:0] trunc_ln414_fu_230_p1;
wire  signed [22:0] lhs_1_fu_242_p3;
wire  signed [23:0] sext_ln1245_fu_250_p1;
wire  signed [23:0] sext_ln1245_1_fu_254_p1;
wire  signed [22:0] sext_ln1245_2_fu_257_p1;
wire   [23:0] ret_V_fu_260_p2;
wire   [22:0] add_ln1245_1_fu_266_p2;
wire   [0:0] and_ln414_fu_298_p2;
wire   [15:0] p_Val2_1_fu_280_p4;
wire   [15:0] zext_ln415_fu_303_p1;
wire   [0:0] p_Result_2_fu_313_p3;
wire   [0:0] xor_ln787_fu_335_p2;
wire   [0:0] or_ln787_fu_341_p2;
wire   [0:0] tmp_fu_353_p3;
wire   [0:0] xor_ln789_fu_361_p2;
wire   [0:0] or_ln789_fu_367_p2;
wire   [0:0] deleted_zeros_fu_347_p2;
wire   [0:0] xor_ln794_fu_379_p2;
wire   [0:0] or_ln794_fu_385_p2;
wire   [0:0] xor_ln794_1_fu_391_p2;
wire   [0:0] deleted_ones_fu_373_p2;
wire   [0:0] xor_ln795_1_fu_403_p2;
wire   [0:0] carry_1_fu_415_p2;
wire   [0:0] and_ln790_fu_419_p2;
wire   [0:0] xor_ln795_2_fu_424_p2;
wire   [0:0] underflow_fu_429_p2;
wire   [0:0] or_ln384_fu_441_p2;
wire   [15:0] select_ln384_1_fu_434_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_done_reg = 1'b0;
end

mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_582_2_layers_7_weight_V_ROM_AUTO_1R #(
    .DataWidth( 6 ),
    .AddressRange( 36864 ),
    .AddressWidth( 16 ))
layers_7_weight_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(layers_7_weight_V_address0),
    .ce0(layers_7_weight_V_ce0),
    .q0(layers_7_weight_V_q0)
);

mydataset_lane_mul_mul_16s_6s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 22 ))
mul_mul_16s_6s_22_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(out5_V_q0),
    .din1(layers_7_weight_V_q0),
    .ce(1'b1),
    .dout(grp_fu_459_p2)
);

mydataset_lane_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln582_fu_172_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_76 <= add_ln582_fu_178_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_76 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            lhs_fu_72 <= sext_ln581_cast_fu_155_p1;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            lhs_fu_72 <= select_ln384_fu_446_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Range2_all_ones_reg_559 <= ret_V_fu_260_p2[32'd23];
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        icmp_ln414_reg_534 <= icmp_ln414_fu_233_p2;
        ifzero_reg_504_pp0_iter2_reg <= ifzero_reg_504_pp0_iter1_reg;
        ifzero_reg_504_pp0_iter3_reg <= ifzero_reg_504_pp0_iter2_reg;
        ifzero_reg_504_pp0_iter4_reg <= ifzero_reg_504_pp0_iter3_reg;
        ifzero_reg_504_pp0_iter5_reg <= ifzero_reg_504_pp0_iter4_reg;
        ifzero_reg_504_pp0_iter6_reg <= ifzero_reg_504_pp0_iter5_reg;
        or_ln795_reg_570 <= or_ln795_fu_409_p2;
        out6_V_addr_reg_490_pp0_iter2_reg <= out6_V_addr_reg_490_pp0_iter1_reg;
        out6_V_addr_reg_490_pp0_iter3_reg <= out6_V_addr_reg_490_pp0_iter2_reg;
        out6_V_addr_reg_490_pp0_iter4_reg <= out6_V_addr_reg_490_pp0_iter3_reg;
        out6_V_addr_reg_490_pp0_iter5_reg <= out6_V_addr_reg_490_pp0_iter4_reg;
        out6_V_addr_reg_490_pp0_iter6_reg <= out6_V_addr_reg_490_pp0_iter5_reg;
        overflow_reg_564 <= overflow_fu_397_p2;
        p_Result_1_reg_544 <= add_ln1245_1_fu_266_p2[32'd22];
        p_Result_s_reg_539 <= ret_V_fu_260_p2[32'd23];
        p_Val2_2_reg_549 <= p_Val2_2_fu_307_p2;
        r_V_2_reg_528 <= grp_fu_459_p2;
        xor_ln795_reg_554 <= xor_ln795_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln582_fu_172_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln583_1_reg_499 <= add_ln583_1_fu_188_p2;
        ifzero_reg_504 <= ifzero_fu_194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_2_reg_485 <= ap_sig_allocacmp_i_2;
        ifzero_reg_504_pp0_iter1_reg <= ifzero_reg_504;
        out6_V_addr_reg_490 <= zext_ln580_cast_fu_150_p1;
        out6_V_addr_reg_490_pp0_iter1_reg <= out6_V_addr_reg_490;
        p_shl21_cast_cast_reg_480[14 : 0] <= p_shl21_cast_cast_fu_142_p1[14 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln582_fu_172_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_2 = 10'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_76;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_sig_allocacmp_lhs_load = select_ln384_fu_446_p3;
    end else begin
        ap_sig_allocacmp_lhs_load = lhs_fu_72;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        layers_7_weight_V_ce0 = 1'b1;
    end else begin
        layers_7_weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out5_V_ce0 = 1'b1;
    end else begin
        out5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        out6_V_ce0 = 1'b1;
    end else begin
        out6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (ifzero_reg_504_pp0_iter6_reg == 1'd1))) begin
        out6_V_we0 = 1'b1;
    end else begin
        out6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range2_all_ones_fu_327_p3 = ret_V_fu_260_p2[32'd23];

assign add_ln1245_1_fu_266_p2 = ($signed(lhs_1_fu_242_p3) + $signed(sext_ln1245_2_fu_257_p1));

assign add_ln582_fu_178_p2 = (ap_sig_allocacmp_i_2 + 10'd1);

assign add_ln583_1_fu_188_p2 = (zext_ln582_cast_fu_146_p1 + i_3_cast_fu_184_p1);

assign add_ln583_fu_212_p2 = (zext_ln583_fu_209_p1 + p_shl21_cast_cast_reg_480);

assign and_ln414_fu_298_p2 = (p_Result_s_fu_272_p3 & icmp_ln414_reg_534);

assign and_ln790_fu_419_p2 = (carry_1_fu_415_p2 & Range2_all_ones_reg_559);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign carry_1_fu_415_p2 = (xor_ln795_reg_554 & p_Result_1_reg_544);

assign deleted_ones_fu_373_p2 = (or_ln789_fu_367_p2 & Range2_all_ones_fu_327_p3);

assign deleted_zeros_fu_347_p2 = (or_ln787_fu_341_p2 ^ Range2_all_ones_fu_327_p3);

assign i_3_cast128_fu_205_p1 = i_2_reg_485;

assign i_3_cast_fu_184_p1 = ap_sig_allocacmp_i_2;

assign icmp_ln414_fu_233_p2 = ((trunc_ln414_fu_230_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_172_p2 = ((ap_sig_allocacmp_i_2 == 10'd576) ? 1'b1 : 1'b0);

assign ifzero_fu_194_p2 = ((add_ln582_fu_178_p2 == 10'd576) ? 1'b1 : 1'b0);

assign layers_7_weight_V_address0 = zext_ln1169_fu_217_p1;

assign lhs_1_fu_242_p3 = {{ap_sig_allocacmp_lhs_load}, {7'd0}};

assign or_ln384_fu_441_p2 = (underflow_fu_429_p2 | overflow_reg_564);

assign or_ln787_fu_341_p2 = (xor_ln787_fu_335_p2 | p_Result_2_fu_313_p3);

assign or_ln789_fu_367_p2 = (xor_ln789_fu_361_p2 | or_ln787_fu_341_p2);

assign or_ln794_fu_385_p2 = (xor_ln794_fu_379_p2 | p_Result_2_fu_313_p3);

assign or_ln795_fu_409_p2 = (xor_ln795_fu_321_p2 | xor_ln795_1_fu_403_p2);

assign out5_V_address0 = i_3_cast128_fu_205_p1;

assign out6_V_address0 = out6_V_addr_reg_490_pp0_iter6_reg;

assign out6_V_d0 = ((or_ln384_fu_441_p2[0:0] == 1'b1) ? select_ln384_1_fu_434_p3 : p_Val2_2_reg_549);

assign overflow_fu_397_p2 = (xor_ln794_1_fu_391_p2 & or_ln794_fu_385_p2);

assign p_Result_1_fu_290_p3 = add_ln1245_1_fu_266_p2[32'd22];

assign p_Result_2_fu_313_p3 = p_Val2_2_fu_307_p2[32'd15];

assign p_Result_s_fu_272_p3 = ret_V_fu_260_p2[32'd23];

assign p_Val2_1_fu_280_p4 = {{add_ln1245_1_fu_266_p2[22:7]}};

assign p_Val2_2_fu_307_p2 = (p_Val2_1_fu_280_p4 + zext_ln415_fu_303_p1);

assign p_shl21_cast_cast_fu_142_p1 = p_shl21_cast;

assign ret_V_fu_260_p2 = ($signed(sext_ln1245_fu_250_p1) + $signed(sext_ln1245_1_fu_254_p1));

assign select_ln384_1_fu_434_p3 = ((overflow_reg_564[0:0] == 1'b1) ? 16'd32767 : 16'd32768);

assign select_ln384_fu_446_p3 = ((or_ln384_fu_441_p2[0:0] == 1'b1) ? select_ln384_1_fu_434_p3 : p_Val2_2_reg_549);

assign sext_ln1245_1_fu_254_p1 = r_V_2_reg_528;

assign sext_ln1245_2_fu_257_p1 = r_V_2_reg_528;

assign sext_ln1245_fu_250_p1 = lhs_1_fu_242_p3;

assign sext_ln581_cast_fu_155_p1 = $signed(sext_ln581);

assign tmp_fu_353_p3 = ret_V_fu_260_p2[32'd23];

assign trunc_ln414_fu_230_p1 = grp_fu_459_p2[6:0];

assign underflow_fu_429_p2 = (xor_ln795_2_fu_424_p2 & p_Result_s_reg_539);

assign xor_ln787_fu_335_p2 = (p_Result_1_fu_290_p3 ^ 1'd1);

assign xor_ln789_fu_361_p2 = (tmp_fu_353_p3 ^ 1'd1);

assign xor_ln794_1_fu_391_p2 = (p_Result_s_fu_272_p3 ^ 1'd1);

assign xor_ln794_fu_379_p2 = (deleted_zeros_fu_347_p2 ^ 1'd1);

assign xor_ln795_1_fu_403_p2 = (deleted_ones_fu_373_p2 ^ 1'd1);

assign xor_ln795_2_fu_424_p2 = (or_ln795_reg_570 ^ and_ln790_fu_419_p2);

assign xor_ln795_fu_321_p2 = (p_Result_2_fu_313_p3 ^ 1'd1);

assign zext_ln1169_fu_217_p1 = add_ln583_fu_212_p2;

assign zext_ln415_fu_303_p1 = and_ln414_fu_298_p2;

assign zext_ln580_cast_fu_150_p1 = zext_ln580;

assign zext_ln582_cast_fu_146_p1 = zext_ln582;

assign zext_ln583_fu_209_p1 = add_ln583_1_reg_499;

always @ (posedge ap_clk) begin
    p_shl21_cast_cast_reg_480[15] <= 1'b0;
end

endmodule //mydataset_lane_mydataset_lane_Pipeline_VITIS_LOOP_582_2
